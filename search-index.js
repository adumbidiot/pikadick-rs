var searchIndex = JSON.parse('{\
"deviantart":{"doc":"","t":[3,13,4,13,13,13,13,13,13,13,13,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,0,11,11,11,0,0,0,12,12,11,11,11,12,12,3,3,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,11,11,12,11,12,12,12,11,11,12,11,12,11,11,11,12],"n":["CookieJar","CookieStore","Error","Io","Json","MissingInitialState","MissingMediaToken","MissingPageData","Reqwest","TokioJoin","Url","borrow","borrow_mut","client","fmt","fmt","from","from","from","from","from","from","into","source","to_string","try_from","try_into","type_id","types","Client","CookieJar","borrow","borrow","borrow_mut","borrow_mut","clean","client","clone","clone_into","cookie_store","cookies","default","default","deserialize","download_deviation","fmt","fmt","from","from","get_oembed","into","into","is_logged_in_online","load_json","new","new","new_with_user_agent","save_json","scrape_stash_info","scrape_webpage","search","serialize","set_cookies","signin","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","OEmbed","borrow","borrow_mut","deserialize","deviation","fmt","from","into","scraped_stash_info","scraped_webpage_info","search_results","thumbnail_url","title","try_from","try_into","type_id","unknown","url","Author","Block","Deviation","DeviationMedia","Html","Markup","MediaType","TextContext","b","base_uri","block_reasons","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","content","data","depth","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deviation_id","entity_map","excerpt","features","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_best_video_media_type","get_best_video_url","get_download_url","get_extension","get_fullview_media_type","get_fullview_url","get_gif_media_type","get_gif_url","get_image_download_url","get_markup","get_media_url","height","html","into","into","into","into","into","into","into","into","is_downloadable","is_film","is_fullview","is_gif","is_image","is_literature","is_new_deviant","is_video","key","kind","kind","kind","kind","markup","media","pretty_name","text","text_content","title","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unknown","unknown","unknown","unknown","unknown","unknown","unknown","unknown","url","user_id","usericon","userid_uuid","username","width","Film","ScrapedStashInfo","Size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","csrf","deserialize","deserialize","deserialize","deviation_width","deviationid","film","fmt","fmt","fmt","from","from","from","get_best_size","height","into","into","into","sizes","src","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unknown","unknown","unknown","width","Config","DeviationExtended","Download","DuperBrowse","Entities","PublicSession","RootStream","ScrapedWebPageInfo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","config","csrf_token","current_open_item","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deviation","deviation_extended","download","duper_browse","entities","filesize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_current_deviation","get_current_deviation_extended","get_current_deviation_id","height","into","into","into","into","into","into","into","into","is_logged_in","kind","public_session","root_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unknown","unknown","unknown","unknown","unknown","unknown","unknown","url","width","SearchResults","borrow","borrow_mut","current_offset","deserialize","deviations","error_code","est_total","fmt","from","has_more","into","next_cursor","try_from","try_into","type_id","unknown"],"q":["deviantart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deviantart::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deviantart::types","","","","","","","","","","","","","","","","","","deviantart::types::deviation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deviantart::types::scraped_stash_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deviantart::types::scraped_webpage_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deviantart::types::search_results","","","","","","","","","","","","","","","",""],"d":["A Cookie Jar","A Cookie Store error","Library Error","Io Error","Json failed to parse","Missing the InitialState variable","Missing media token","Missing the pageData variable","Reqwest HTTP Error","A tokio task failed to join","Invalid Url","","","Client","","","","","","","","","","","","","","","Api Types","A DeviantArt Client","A Cookie Jar","","","","","Clean the jar of expired cookies","The inner http client. You probably shouldn’t touch …","","","The cookie store","","","","","Download a <code>Deviation</code>.","","","","","OEmbed API","","","Run a GET request on the home page and check if the user …","Load cookies from a json cookie file","Make a new Cookie Jar.","Make a new <code>Client</code>.","Make a new <code>Client</code> with the given user agent.","Save the cookie jar as json","Scrape a sta.sh link for info","Scrape a webpage for info","Search for deviations with the given query.","","","Sign in to get access to more results from apis. This …","","","","","","","","DeviantArt OEmbed","","","","Deviation","","","","Scraped stash info","Scraped webpage info","Search Results","Url of the thumbnail","Title","","","","Unknown K/Vs","Url of the asset","","A Markup block","A Deviation","The media field of a <code>Deviation</code>.","Text Context html","Text Context Html Markup","DeviantArt <code>DeviationMedia</code> media type.","Text Content for literature","? ?","The base uri","DeviantArt Author ?","Blocks of marked-up text","","","","","","","","","","","","","","","","","The content. A uri used with base_uri.","?","?","","","","","","","","","Deviation ID","?","Excerpt of text","?","","","","","","","","","","","","","","","","","Try to get the video <code>MediaType</code>","Get the best video url","Get the “download” url for this <code>Deviation</code>.","Try to get the original extension of this <code>Deviation</code>","Try to get the fullview <code>MediaType</code>.","Get the fullview url for this <code>Deviation</code>.","Try to get the gif <code>MediaType</code>.","Get the GIF url for this <code>Deviation</code>.","Get the most “fitting” url to download an image.","Try to parse the markup field","Get the media url for this <code>Deviation</code>.","Image Height","Html data","","","","","","","","","Whether this is downloadable","Whether this is a film","Whether this is the fullview","Whether this is a gif","Whether this is an image","Whether this is literature","is the user new","Whether this is a video","?","Deviation Type","? The kind of media","The kind of text data","","Text markup data","Media Info","Pretty Name","Text data","Text content for literature","Title","Image token","","","","","","","","","","","","","","","","","","","","","","","","","Types","Unknown K/Vs","Unknown K/Vs","Unknown K/Vs","Unknown K/Vs","Unknown K/Vs","Unknown K/Vs","Unknown K/Vs","Unknown K/Vs","Image Url","User ID","User icon url","User UUID","Username","Image Width","Film data from a sta.sh link","Scraped info from a sta.sh link","Film size","","","","","","","Csrf token","","","","?","?","?","","","","","","","Get the best size","Video height","","","","Video sizes","Video src","","","","","","","","","","Unknown data","Unknown data","Unknown data","Video width","?","Extended Info about a deviation","","?","?","?","?","Info scraped from a deviation url","","","","","","","","","","","","","","","","","Page config like csrf tokens","The page’s csrf token","The id of the current deviation. This is either a number …","HTML description","","","","","","","","","Deviations","Extended Deviation Info","Download info","?","Deviations extended deviations maybe?","The file size","","","","","","","","","","","","","","","","","Get the <code>Deviation</code> for this page.","Get the <code>DeviationExtended</code> for this page.","Get the current deviation’s id","The image height","","","","","","","","","Whether the user is logged in","?","Info about the current session","?","","","","","","","","","","","","","","","","","","","","","","","","","Unknown data","Unknown data","Unknown data","Unknown data","Unknown data","Unknown data","Unknown data","Unknown data","The url","The image width","DeviantArt Search Results","","","The current offset","","Deviations","The Error Code","The setimated number of total results","","","Whether there are more results","","?","","","","Unknown K/Vs"],"i":[0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2,3,2,3,2,3,3,3,3,2,2,3,2,3,2,3,2,3,3,2,3,3,2,2,3,3,2,3,3,3,2,2,3,3,2,3,2,3,2,3,0,4,4,4,0,4,4,4,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,5,6,7,8,7,9,6,5,10,11,8,12,7,9,6,5,10,11,8,12,5,12,12,7,9,6,5,10,11,8,12,7,8,10,11,7,9,6,5,10,11,8,12,7,9,6,5,10,11,8,12,6,7,7,7,6,7,6,7,7,11,7,5,10,7,9,6,5,10,11,8,12,7,7,5,5,7,7,9,5,12,7,5,11,12,11,7,6,12,7,7,6,7,9,6,5,10,11,8,12,7,9,6,5,10,11,8,12,7,9,6,5,10,11,8,12,6,7,9,6,5,10,11,8,12,7,9,9,9,9,5,0,0,0,13,14,15,13,14,15,13,13,14,15,13,13,13,13,14,15,13,14,15,14,15,13,14,15,14,15,13,14,15,13,14,15,13,14,15,13,14,15,15,0,0,0,0,0,0,0,0,16,17,18,19,20,21,22,23,16,17,18,19,20,21,22,23,16,17,22,19,16,17,18,19,20,21,22,23,18,18,19,16,16,20,16,17,18,19,20,21,22,23,16,17,18,19,20,21,22,23,16,16,16,20,16,17,18,19,20,21,22,23,23,20,16,21,16,17,18,19,20,21,22,23,16,17,18,19,20,21,22,23,16,17,18,19,20,21,22,23,16,17,18,19,20,21,22,23,20,20,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",3]]],[[["error",3]]],[[["joinerror",3]]],[[["parseerror",4]]],[[["error",3]]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],null,[[],["client",3]],[[]],null,[[["url",3]],[["headervalue",3],["option",4,["headervalue"]]]],[[]],[[]],[[],["result",4]],[[["deviation",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[]],[[]],[[["str",15]]],[[],[["result",4,["error"]],["error",4]]],[[["str",15]]],[[["str",15]]],[[["u64",15],["str",15]]],[[],["result",4]],[[["url",3],["iterator",8]]],[[["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["mediatype",3],["option",4,["mediatype"]]]],[[],[["url",3],["option",4,["url"]]]],[[],[["option",4,["url"]],["url",3]]],[[],[["str",15],["option",4,["str"]]]],[[],[["mediatype",3],["option",4,["mediatype"]]]],[[],[["option",4,["url"]],["url",3]]],[[],[["mediatype",3],["option",4,["mediatype"]]]],[[],[["option",4,["url"]],["url",3]]],[[],[["option",4,["url"]],["url",3]]],[[],[["option",4,["result"]],["result",4,["markup","error"]]]],[[],[["option",4,["url"]],["url",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],[["option",4,["size"]],["size",3]]],null,[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["deviation"]],["deviation",3]]],[[],[["deviationextended",3],["option",4,["deviationextended"]]]],[[],[["option",4,["value"]],["value",4]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[],["result",4]],null,null,null,[[["formatter",3]],["result",6]],[[]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[4,"Error"],[3,"CookieJar"],[3,"Client"],[3,"OEmbed"],[3,"MediaType"],[3,"DeviationMedia"],[3,"Deviation"],[3,"Markup"],[3,"Author"],[3,"TextContext"],[3,"Html"],[3,"Block"],[3,"ScrapedStashInfo"],[3,"Film"],[3,"Size"],[3,"ScrapedWebPageInfo"],[3,"Config"],[3,"Entities"],[3,"DeviationExtended"],[3,"Download"],[3,"DuperBrowse"],[3,"RootStream"],[3,"PublicSession"],[3,"SearchResults"]]},\
"fml":{"doc":"","t":[13,4,6,13,13,13,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Api","Error","FmlResult","InvalidApiResponse","Json","Reqwest","borrow","borrow_mut","client","fmt","fmt","from","from","from","from","into","source","to_string","try_from","try_into","type_id","types","Client","borrow","borrow_mut","clone","clone_into","fmt","from","into","list_random","new","to_owned","try_from","try_into","type_id","ApiResponse","Article","ArticleImage","ArticleKeyword","ArticleMetrics","ArticleUsermetrics","apikey","area","article","article_type","author","bitly","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","city","comment","content","content_hidden","copyright","country","countrycode","created","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","error","favorite","favorite","flag","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","gender","height","id","images","into","into","into","into","into","into","ip","is_error","is_success","is_valid_response","keywords","label","layout","legend","metrics","mod_negative","mod_positive","name","openview","origin","paragraphs","published","reports","rub","site","siteorig","slug","smiley","smiley_amusing","smiley_funny","smiley_hilarious","smiley_weird","social_truncate","spicy","status","title","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uid","unknown","unknown","unknown","unknown","unknown","unknown","updated","url","url","usage","user","usermetrics","videos","vote","votes","votes_down","votes_up","width"],"q":["fml","","","","","","","","","","","","","","","","","","","","","","fml::client","","","","","","","","","","","","","","fml::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Invalid Api Error","Error type","Result Type","An API response was invalid","Invalid Json","Reqwest HTTP Error","","","Client type","","","","","","","","","","","","","API Types","An FML Client","","","","","","","","Get a list of random articles.","Make a new Client from an api key","","","","","An API Response","An FML article","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A potential response payload.","","","","","","","A potential API error.","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the response is an error.","Whether the response is a success.","Checks whether the data contained is valid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unknown data","","","","","","","","","","","","","","","","",""],"i":[1,0,0,1,1,1,1,1,0,1,1,2,1,1,1,1,1,1,1,1,1,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,4,4,5,4,4,4,6,4,7,8,5,9,6,4,7,8,5,9,4,5,4,4,7,4,4,4,6,6,4,7,8,5,9,6,5,9,4,4,7,8,5,9,6,4,7,8,5,9,4,7,4,4,6,4,7,8,5,9,4,6,6,6,4,8,4,7,4,5,5,7,4,4,4,4,5,8,4,4,4,9,5,5,5,5,4,4,4,4,6,4,7,8,5,9,6,4,7,8,5,9,6,4,7,8,5,9,8,6,4,7,8,5,9,4,4,7,7,4,4,4,4,9,5,5,7],"f":[null,null,null,null,null,null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["apiresponse",3]]],[[["error",3]]],[[["error",3]]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["client",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15]]],[[["string",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[6,"FmlResult"],[3,"Client"],[3,"Article"],[3,"ArticleMetrics"],[3,"ApiResponse"],[3,"ArticleImage"],[3,"ArticleKeyword"],[3,"ArticleUsermetrics"]]},\
"insta":{"doc":"","t":[3,4,6,13,3,12,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Client","InstaError","InstaResult","OpenGraphClient","OpenGraphObject","audio_url","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","default","description","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_html","from_str","get_hash","get_image_file_name","get_post","get_video_url_file_name","hash","image","into","into","into","is_image","is_video","kind","ne","new","source","title","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","video_url"],"q":["insta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Client","Error type","Result type","Failed to fetch and decode an <code>OpenGraphObject</code>.","An OpenGraphObject.","Audio Url","","","","","","","The inner open graph client.","","","","","","Object Description","","","","","","","","","","","Make a new <code>OpenGraphObject</code> from <code>Html</code>.","","","Try to get the video url’s file name","Get a post by url.","Try to get the video url’s file name","","Object Image Url","","","","Check whether this is an image","Check whether this is a video","Object Type/Kind","","Make a new <code>Client</code>.","","Object Title","","","","","","","","","","","","","Object Permanent Url","Video Url"],"i":[0,0,0,1,0,2,1,3,2,1,3,2,3,3,2,3,2,3,2,2,2,1,1,3,2,1,1,3,2,2,2,2,2,3,2,2,2,1,3,2,2,2,2,2,3,1,2,3,2,1,1,3,2,1,3,2,1,3,2,2,2],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["client",3]],[[],["opengraphobject",3]],[[]],[[]],[[]],null,[[["opengraphobject",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["clienterror",4]]],[[]],[[]],[[]],[[["html",3]],[["fromhtmlerror",4],["result",4,["opengraphobject","fromhtmlerror"]],["opengraphobject",3]]],[[["str",15]],[["result",4,["opengraphobject"]],["opengraphobject",3]]],[[],["u64",15]],[[],[["option",4,["str"]],["str",15]]],[[["str",15]]],[[],[["option",4,["str"]],["str",15]]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[["opengraphobject",3]],["bool",15]],[[]],[[],[["error",8],["option",4,["error"]]]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[4,"InstaError"],[3,"OpenGraphObject"],[3,"Client"]]},\
"iqdb":{"doc":"","t":[3,3,3,4,13,3,3,4,13,13,17,13,3,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Body","BytesCodec","Client","Error","File","FramedRead","Html","Image","InvalidSearchResults","Join","MAX_FILE_SIZE","Reqwest","SearchResults","Url","add_attrs_if_missing","append","append_based_on_parent_node","append_before_sibling","append_doctype_to_document","as_bytes","best_match","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create_comment","create_element","create_pi","decode","decoder","decoder_mut","default","default","elem_name","encode","eq","eq","equivalent","equivalent","errors","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_file","from_html","from_path","get_document","get_hash","get_mut","get_pin_mut","get_ref","get_template_contents","hash","into","into","into","into","into","into","into","into","into_inner","mark_script_already_started","ne","ne","new","new","new","new_document","new_fragment","parse_document","parse_error","parse_fragment","partial_cmp","poll_close","poll_flush","poll_next","poll_ready","possible_matches","quirks_mode","read_buffer","read_buffer_mut","remove_from_parent","reparent_children","root_element","same_node","search","select","set_quirks_mode","source","start_send","to_owned","to_owned","to_owned","to_string","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","wrap_stream","body","name"],"q":["iqdbiqdb::Image",""],"d":["An asynchronous request body.","A simple <code>Decoder</code> and <code>Encoder</code> implementation that just …","","","An image file","A <code>Stream</code> of messages decoded from an <code>AsyncRead</code>.","An HTML tree.","An Image","Invalid Search Results","A tokio task failed to join","The max file size in bytes","Reqwest Error","The results of an image search","A url to an image","","","","","","Returns a reference to the internal data of the <code>Body</code>.","The best match","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","","","","","","","","","Parse errors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make an <code>Image</code> from a file and a name.","Make a <code>SearchResults</code> from html","Make an <code>Image</code> from a path, opening the file …","","","Returns a mutable reference to the underlying I/O stream …","Returns a pinned mutable reference to the underlying I/O …","Returns a reference to the underlying I/O stream wrapped …","","","","","","","","","","","Consumes the <code>FramedRead</code>, returning its underlying I/O …","","","","","Creates a new <code>BytesCodec</code> for shipping around raw bytes.","Creates a new <code>FramedRead</code> with the given <code>decoder</code>.","Creates an empty HTML document.","Creates an empty HTML fragment.","Parses a string of HTML as a document.","","Parses a string of HTML as a fragment.","","","","","","Possible matches","The quirks mode.","Returns a reference to the read buffer.","Returns a mutable reference to the read buffer.","","","Returns the root <code><html></code> element.","","Look up an image.","Returns an iterator over elements matching a selector.","","","","","","","","The node tree.","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>FramedRead</code> with the given <code>decoder</code> and a …","Wrap a futures <code>Stream</code> in a box inside <code>Body</code>.","",""],"i":[0,0,0,0,1,0,0,0,2,2,0,2,0,1,3,3,3,3,3,4,5,1,6,5,2,3,4,7,8,1,6,5,2,3,4,7,8,6,3,7,6,3,7,7,3,3,3,7,8,8,6,7,3,7,3,7,3,7,3,3,6,5,2,2,3,4,7,8,1,1,1,6,5,2,2,2,3,4,4,4,4,4,4,4,4,7,8,1,5,1,3,7,8,8,8,3,7,1,6,5,2,3,4,7,8,8,3,3,7,6,7,8,3,3,3,3,3,7,8,8,8,8,5,3,8,8,3,3,3,3,6,3,3,2,8,6,3,7,2,3,1,6,5,2,3,4,7,8,1,6,5,2,3,4,7,8,8,1,6,5,2,3,4,7,8,8,4,9,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["global",3],["attribute",3],["vec",3,["attribute","global"]]]],[[["nodeortext",4]]],[[["nodeortext",4]]],[[["nodeortext",4]]],[[["tendril",3,["utf8","nonatomic"]],["nonatomic",3],["utf8",3]]],[[],["option",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["client",3]],[[],["html",3]],[[],["bytescodec",3]],[[]],[[]],[[]],[[["bytescodec",3]],["ordering",4]],[[["utf8",3],["nonatomic",3],["tendril",3,["utf8","nonatomic"]]]],[[["qualname",3],["global",3],["attribute",3],["elementflags",3],["vec",3,["attribute","global"]]]],[[["tendril",3,["utf8","nonatomic"]],["nonatomic",3],["utf8",3]]],[[["bytesmut",3]],[["result",4,["option","error"]],["option",4,["bytesmut"]],["error",3]]],[[]],[[]],[[]],[[],["bytescodec",3]],[[],["expandedname",3]],[[["bytes",3],["bytesmut",3]],[["result",4,["error"]],["error",3]]],[[["html",3]],["bool",15]],[[["bytescodec",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["html",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[["str",15]]],[[["string",3]]],[[]],[[]],[[["joinerror",3]]],[[["error",3]]],[[]],[[]],[[["response",3]],["body",3]],[[]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["body",3]],[[["body",3]],["body",3]],[[],["body",3]],[[["string",3]],["body",3]],[[["bytes",3]],["body",3]],[[["str",15]],["body",3]],[[]],[[]],[[["string",3],["file",3]],["result",6]],[[["html",3]],[["fromhtmlerror",4],["result",4,["fromhtmlerror"]]]],[[["path",3]]],[[]],[[],["u64",15]],[[]],[[["framedread",3],["pin",3,["framedread"]]],["pin",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["html",3]],["bool",15]],[[["bytescodec",3]],["bool",15]],[[]],[[],["bytescodec",3]],[[],["framedread",3]],[[],["html",3]],[[],["html",3]],[[["str",15]],["html",3]],[[["cow",4,["str"]],["str",15]]],[[["str",15]],["html",3]],[[["bytescodec",3]],[["option",4,["ordering"]],["ordering",4]]],[[["context",3],["framedread",3],["pin",3,["framedread"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["framedread",3],["pin",3,["framedread"]]],[["result",4],["poll",4,["result"]]]],[[["context",3],["framedread",3],["pin",3,["framedread"]]],[["poll",4,["option"]],["option",4]]],[[["context",3],["framedread",3],["pin",3,["framedread"]]],[["result",4],["poll",4,["result"]]]],null,null,[[],["bytesmut",3]],[[],["bytesmut",3]],[[]],[[]],[[],["elementref",3]],[[],["bool",15]],[[]],[[["selector",3]],["select",3]],[[["quirksmode",4]]],[[],[["error",8],["option",4,["error"]]]],[[["framedread",3],["pin",3,["framedread"]]],["result",4]],[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["option",4,["result"]],["poll",4,["option"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["framedread",3]],[[],["body",3]],null,null],"p":[[4,"Image"],[4,"Error"],[3,"Html"],[3,"Body"],[3,"SearchResults"],[3,"Client"],[3,"BytesCodec"],[3,"FramedRead"],[13,"File"]]},\
"nekos":{"doc":"","t":[3,4,3,3,13,13,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11],"n":["Client","Error","Image","ImageList","InvalidUrl","Io","Reqwest","Url","approver","artist","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cannot_be_a_base","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","comments","created_at","default","deserialize","deserialize","deserialize","deserialize_internal","domain","eq","eq","equivalent","favorites","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from_directory_path","from_file_path","from_str","get_hash","get_random","get_to_writer","get_url","has_authority","has_host","hash","host","host_str","id","images","index","index","index","index","into","into","into","into","into","into_string","into_url","join","likes","make_relative","ne","new","nsfw","options","origin","original_hash","parse","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","port","port_or_known_default","query","query_pairs","query_pairs_mut","scheme","serialize","serialize","serialize","serialize_internal","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket_addrs","source","tags","to_file_path","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unknown","unknown","uploader","username"],"q":["nekos","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Client for nekos.moe","Nekos lib error","Neko images","A list of neko images","Invalid URL","Io Error","Reqwest HTTP Error","A parsed URL record.","The approver","Artist","","Return the serialization of this URL.","","","","","","","","","","","Return whether this URL is a cannot-be-a-base URL, …","","","","","","","","","","Comments","created date","","","","","Serialize with Serde using the internal representation of …","If this URL has a host and it is a domain name (not an IP …","","","","of favorites","","","","","","","","Return this URL’s fragment identifier, if any.","","","","","","","","","Convert a directory name as <code>std::path::Path</code> into an URL …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","","Get a random list of catgirls.","Get a url and copy it to the given writer","Get the url","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","Return the parsed representation of the host for this URL.…","Return the string representation of the host (domain or …","Image id","Images list","","","","","","","","","","Return the serialization of this URL.","","Parse a string as an URL, with this URL as the base URL.","of likes","Creates a relative URL if possible, with this URL as the …","","Make a new client","Whether this is nsfw","Return a default <code>ParseOptions</code> that can fully configure …","Return the origin of this URL (…","unknown","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator …","Return an object with methods to manipulate this URL’s …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a …","Return the scheme of this URL, lower-cased, as an ASCII …","","","","Serialize with Serde using the internal representation of …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","","Tags","Assuming the URL is in the <code>file</code> scheme or similar, …","","","","","","","","","","","","","","","","","","","","","","","Unknown data","Unknown data","The uploader","Return the username for this URL (typically the empty …"],"i":[0,0,0,0,1,1,1,0,2,2,3,3,4,5,2,1,3,4,5,2,1,3,3,4,5,2,3,4,5,2,3,3,2,2,4,5,2,3,3,3,2,3,3,2,4,5,2,1,1,3,3,3,4,5,2,1,1,1,1,3,3,3,3,3,4,4,2,3,3,3,3,3,2,5,3,3,3,3,4,5,2,1,3,3,3,3,2,3,2,4,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,5,2,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,4,5,2,3,1,3,4,5,2,1,3,3,4,5,2,1,3,4,5,2,1,3,5,2,2,3],"f":[null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["client",3]],[[],["imagelist",3]],[[],["image",3]],[[],["url",3]],[[]],[[]],[[]],[[]],[[["url",3]],["ordering",4]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],[["url",3],["result",4,["url"]]]],[[],[["url",3],["result",4,["url"]]]],[[],[["option",4,["str"]],["str",15]]],[[["image",3]],["bool",15]],[[["url",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[],[["option",4,["str"]],["str",15]]],[[]],[[]],[[]],[[["error",3]]],[[]],[[["error",3]]],[[["parseerror",4]]],[[]],[[],[["url",3],["result",4,["url"]]]],[[],[["url",3],["result",4,["url"]]]],[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],[[],["u64",15]],[[["option",4,["bool"]],["u8",15],["bool",15]]],[[["str",15]]],[[],[["parseerror",4],["result",4,["url","parseerror"]],["url",3]]],[[],["bool",15]],[[],["bool",15]],[[]],[[],[["option",4,["host"]],["host",4,["str"]]]],[[],[["option",4,["str"]],["str",15]]],null,null,[[["position",4],["range",3,["position"]]],["str",15]],[[["rangefull",3]],["str",15]],[[["rangefrom",3,["position"]],["position",4]],["str",15]],[[["position",4],["rangeto",3,["position"]]],["str",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],[["url",3],["result",4,["url","error"]],["error",3]]],[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],null,[[["url",3]],[["string",3],["option",4,["string"]]]],[[["image",3]],["bool",15]],[[]],null,[[],["parseoptions",3]],[[],["origin",4]],null,[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],[[["url",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["option",4,["str"]],["str",15]]],[[],["str",15]],[[],[["option",4,["split"]],["split",3,["char"]]]],[[],[["pathsegmentsmut",3],["result",4,["pathsegmentsmut"]]]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["option",4,["str"]],["str",15]]],[[],["parse",3]],[[],[["serializer",3,["urlquery"]],["urlquery",3]]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["option",4,["str"]],["str",15]]],[[["option",4,["str"]],["str",15]],[["parseerror",4],["result",4,["parseerror"]]]],[[["ipaddr",4]],["result",4]],[[["option",4,["str"]],["str",15]],["result",4]],[[["str",15]]],[[["u16",15],["option",4,["u16"]]],["result",4]],[[["option",4,["str"]],["str",15]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["vec",3,["socketaddr","global"]],["result",4,["vec","error"]],["error",3]]],[[],[["error",8],["option",4,["error"]]]],null,[[],[["pathbuf",3],["result",4,["pathbuf"]]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["result",4,["url"]],["url",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["str",15]]],"p":[[4,"Error"],[3,"Image"],[3,"Url"],[3,"Client"],[3,"ImageList"]]},\
"open_graph":{"doc":"https://ogp.me/","t":[3,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,3,4,13,13,13,13,13,13,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,3,13,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,12],"n":["Html","add_attrs_if_missing","append","append_based_on_parent_node","append_before_sibling","append_doctype_to_document","borrow","borrow_mut","client","clone","clone_into","create_comment","create_element","create_pi","elem_name","eq","equivalent","errors","finish","fmt","from","get_document","get_template_contents","into","mark_script_already_started","ne","new_document","new_fragment","open_graph_object","parse_document","parse_error","parse_fragment","quirks_mode","remove_from_parent","reparent_children","root_element","same_node","select","set_quirks_mode","to_owned","tree","try_from","try_into","type_id","Client","ClientError","InvalidOpenGraphObject","Io","JokioJoin","MissingVideoUrl","Reqwest","UnsupportedObjectKind","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","default","download_object_to","fmt","fmt","fmt","from","from","from","from","from","from","from_client","get_and_copy_to","get_object","into","into","new","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","FromHtmlError","InvalidAudioUrl","InvalidImage","InvalidUrl","InvalidVideoUrl","MissingImage","MissingTitle","MissingType","MissingUrl","OpenGraphObject","Unimplemented","audio_url","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","description","eq","equivalent","fmt","fmt","fmt","from","from","from_html","from_str","get_hash","get_image_file_name","get_video_url_file_name","hash","image","into","into","is_image","is_video","kind","ne","title","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","url","video_url"],"q":["open_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","open_graph::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","open_graph::open_graph_object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An HTML tree.","","","","","","","","A generic open graph client","","","","","","","","","Parse errors.","","","","","","","","","Creates an empty HTML document.","Creates an empty HTML fragment.","<code>OpenGraphObject</code>","Parses a string of HTML as a document.","","Parses a string of HTML as a fragment.","The quirks mode.","","","Returns the root <code><html></code> element.","","Returns an iterator over elements matching a selector.","","","The node tree.","","","","A generic open graph protocol client","An error that may occur while using a <code>Client</code>.","The <code>OpenGraphObject</code> was invalid","An IO Error occured","A tokio task failed","An OGP object is missing a video url","A reqwest HTTP error","An OGP object has an unknown object kind","","","","","The inner HTTP Client.","","","","Best-effort function to download an <code>OpenGraphObject</code> and …","","","","","","","","","","Make a new <code>Client</code> from a <code>reqwest::Client</code>.","Convenience function for getting data and copying it into …","Get an <code>OpenGraphObject</code> by url.","","","Make a new <code>Client</code>","","","","","","","","","","An error that may occur while parsing an <code>OpenGraphObject</code>.","Invalid Audio Url","Invalid Image field","Invalid Image field","Invalid Video Url","Missing Image field","Missing title field","Missing Type field","Missing Url field","An OpenGraphObject.","Ran into unimplemented functionality","Audio Url","","","","","","","Object Description","","","","","","","","Make a new <code>OpenGraphObject</code> from <code>Html</code>.","","","Try to get the video url’s file name","Try to get the video url’s file name","","Object Image Url","","","Check whether this is an image","Check whether this is a video","Object Type/Kind","","Object Title","","","","","","","","","Object Permanent Url","Video Url"],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,3,2,3,3,3,3,3,3,2,2,3,2,2,2,2,2,3,3,3,3,2,3,3,2,3,2,2,3,2,3,2,3,0,4,4,4,4,4,4,4,4,0,4,5,4,5,4,5,5,5,5,5,5,4,4,5,4,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4,4,5,4,5,4,5,5,5],"f":[null,[[["attribute",3],["global",3],["vec",3,["attribute","global"]]]],[[["nodeortext",4]]],[[["nodeortext",4]]],[[["nodeortext",4]]],[[["tendril",3,["utf8","nonatomic"]],["utf8",3],["nonatomic",3]]],[[]],[[]],null,[[],["html",3]],[[]],[[["tendril",3,["utf8","nonatomic"]],["utf8",3],["nonatomic",3]]],[[["vec",3,["attribute","global"]],["elementflags",3],["attribute",3],["global",3],["qualname",3]]],[[["tendril",3,["utf8","nonatomic"]],["utf8",3],["nonatomic",3]]],[[],["expandedname",3]],[[["html",3]],["bool",15]],[[],["bool",15]],null,[[],["html",3]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[["html",3]],["bool",15]],[[],["html",3]],[[],["html",3]],null,[[["str",15]],["html",3]],[[["cow",4,["str"]],["str",15]]],[[["str",15]],["html",3]],null,[[]],[[]],[[],["elementref",3]],[[],["bool",15]],[[["selector",3]],["select",3]],[[["quirksmode",4]]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["client",3]],[[]],[[]],[[["opengraphobject",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["joinerror",3]]],[[["fromhtmlerror",4]]],[[["error",3]]],[[]],[[["error",3]]],[[]],[[["client",3]]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["opengraphobject",3]],[[]],null,[[["opengraphobject",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["html",3]],[["result",4,["fromhtmlerror"]],["fromhtmlerror",4]]],[[["str",15]],["result",4]],[[],["u64",15]],[[],[["str",15],["option",4,["str"]]]],[[],[["str",15],["option",4,["str"]]]],[[]],null,[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[["opengraphobject",3]],["bool",15]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[3,"Html"],[4,"ClientError"],[3,"Client"],[4,"FromHtmlError"],[3,"OpenGraphObject"]]},\
"pikadick":{"doc":"Pikadick","t":[3,7,7,3,7,7,3,17,5,5,5,11,11,11,11,11,11,0,0,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,5,0,5,11,5,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,0,0,7,5,7,3,6,11,11,11,5,11,11,12,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,12,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,10,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,5,7,7,7,7,5,5,5,17,17,7,7,3,11,11,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,7,7,3,11,11,12,12,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,5,7,7,5,7,7,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,7,7,5,12,17,3,3,7,7,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,5,3,17,17,17,7,7,3,6,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,7,7,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,7,7,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,5,12,11,11,11,11,11,11,11,11,11,6,7,7,3,6,3,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,5,12,11,11,11,11,11,11,11,11,11,7,7,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,12,12,3,3,7,7,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,7,7,5,5,5,5,5,5,5,12,7,7,3,7,7,7,3,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,5,11,11,11,11,11,11,11,11,11,11,11,7,7,5,7,7,5,7,7,5,12,17,17,17,17,3,17,17,17,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,7,7,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,17,7,7,5,5,7,7,5,5,7,7,5,7,7,5,4,3,3,13,3,13,13,13,3,13,13,13,4,3,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,12,12,12,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,13,17,17,17,3,13,13,17,17,13,13,13,13,13,17,17,4,4,4,13,17,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,12,12,12,13,3,3,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,0,5,12,13,17,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,17,17,3,17,3,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ClientDataKey","GENERAL_GROUP","GENERAL_GROUP_OPTIONS","General","HELP","HELP__OPTIONS","Handler","TOKIO_RT_SHUTDOWN_TIMEOUT","after_handler","async_main","before_handler","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checks","client_data","clone","clone_into","commands","config","database","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","handle_ctrl_c","help","init","init","init","into","into","into","into_request","into_request","into_request","load_config","logger","main","message","process_dispatch_error","process_dispatch_error_future","ready","real_main","resume","setup","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unrecognised_command_handler","util","vzip","vzip","vzip","admin","enabled","ADMIN_CHECK","admin_check","ENABLED_CHECK","EnabledCheckData","MutexGuard","add_groups","borrow","borrow_mut","checks_are_same","clone","clone_into","command_lookup","command_name_cache","default","deref","deref_mut","drop","enabled_check","fmt","from","get_command_name_from_options","get_command_names","init","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","CacheStatsBuilder","CacheStatsProvider","ClientData","borrow","borrow","borrow_mut","borrow_mut","config","db","default","deref","deref","deref_mut","deref_mut","deviantart_client","drop","drop","enabled_check_data","fml_client","fmt","fmt","from","from","generate_cache_stats","init","init","init","insta_client","into","into","into_inner","into_request","into_request","iqdb_client","nekos_client","new","publish_cache_stats","publish_stat","quizizz_client","r6stats_client","r6tracker_client","reddit_embed_data","rule34_client","shard_manager","shift_client","stats","tic_tac_toe_data","try_from","try_from","try_into","try_into","type_id","type_id","urban_client","vzip","vzip","xkcd_client","cache_stats","cmd","deviantart","fml","insta_dl","invite","iqdb","latency","nekos","ping","quizizz","r6stats","r6tracker","reddit_embed","rule34","shift","system","tic_tac_toe","urban","uwuify","vaporwave","xkcd","zalgo","CACHE_STATS_COMMAND","CACHE_STATS_COMMAND_OPTIONS","cache_stats","CMD_COMMAND","CMD_COMMAND_OPTIONS","LIST_COMMAND","LIST_COMMAND_OPTIONS","cmd","list","status_to_str","COOKIE_KEY","DATA_STORE_NAME","DEVIANTART_COMMAND","DEVIANTART_COMMAND_OPTIONS","DeviantartClient","borrow","borrow_mut","client","clone","clone_into","deref","deref_mut","deviantart","drop","fmt","from","init","into","into_request","new","publish_cache_stats","search","search_cache","signin","to_owned","try_from","try_into","type_id","vzip","FML_COMMAND","FML_COMMAND_OPTIONS","FmlClient","borrow","borrow_mut","cache","client","clone","clone_into","deref","deref_mut","drop","fml","fmt","from","get_entry","init","into","into_request","new","publish_cache_stats","repopulate","should_repopulate","to_owned","try_from","try_into","type_id","vzip","INSTA_DL_COMMAND","INSTA_DL_COMMAND_OPTIONS","insta_dl","INVITE_COMMAND","INVITE_COMMAND_OPTIONS","invite","IQDB_COMMAND","IQDB_COMMAND_OPTIONS","IqdbClient","borrow","borrow_mut","client","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_request","iqdb","new","publish_cache_stats","search","search_cache","to_owned","try_from","try_into","type_id","vzip","LATENCY_COMMAND","LATENCY_COMMAND_OPTIONS","latency","0","BUFFER_SIZE","Cache","CacheInner","NEKOS_COMMAND","NEKOS_COMMAND_OPTIONS","NekosClient","NsfwArg","NsfwArgParseError","add","add_many","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","client","clone","clone","clone_into","clone_into","convert","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","get_cache","get_rand","get_rand","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","nekos","new","new","nsfw_cache","parse","populate","primary","primary_is_empty","primary_len","publish_cache_stats","secondary","secondary_is_empty","secondary_len","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","PING_COMMAND","PING_COMMAND_OPTIONS","ping","CodeCache","LIMIT_REACHED_MSG","MAX_CODE","MAX_TRIES","QUIZIZZ_COMMAND","QUIZIZZ_COMMAND_OPTIONS","QuizizzClient","SearchResult","borrow","borrow","borrow_mut","borrow_mut","cache","clone","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","finder_task","finder_task_rx","finder_task_wakeup","fmt","fmt","from","from","init","init","into","into","into_request","into_request","is_empty","len","new","new","push","quizizz","search_for_code","to_owned","trim","trim_pop","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","R6STATS_COMMAND","R6STATS_COMMAND_OPTIONS","R6StatsClient","borrow","borrow_mut","client","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_stats","init","into","into_request","new","publish_cache_stats","r6stats","search_cache","to_owned","try_from","try_into","type_id","vzip","R6TRACKER_COMMAND","R6TRACKER_COMMAND_OPTIONS","R6TrackerClient","Stats","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_stats","init","init","into","into","into_request","into_request","new","overwolf_player","populate_embed","profile","publish_cache_stats","r6tracker","search_cache","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PostId","REDDIT_EMBED_COMMAND","REDDIT_EMBED_COMMAND_OPTIONS","RedditEmbedData","SubReddit","URL_REGEX","__private_field","borrow","borrow","borrow_mut","borrow_mut","cache","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","get_original_post","get_video_data","init","init","initialize","into","into","into_request","into_request","new","parse_post_url","process_msg","publish_cache_stats","reddit_client","reddit_embed","reddit_tube_client","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RULE34_COMMAND","RULE34_COMMAND_OPTIONS","Rule34Client","borrow","borrow_mut","client","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_request","list","list_cache","new","publish_cache_stats","rule34","to_owned","try_from","try_into","type_id","vzip","0","0","GameArg","GameParseError","SHIFT_COMMAND","SHIFT_COMMAND_OPTIONS","ShiftClient","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache","clone","clone_into","convert","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_str","from_str","get_rand","init","init","init","into","into","into","into_request","into_request","into_request","new","orcz_client","parse","publish_cache_stats","shift","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SYSTEM_COMMAND","SYSTEM_COMMAND_OPTIONS","epoch_nanos_to_local_datetime","fmt_cpu_frequency","fmt_memory","fmt_swap","fmt_uptime","get_cpu_usage","system","0","BOARD_COMMAND","CONCEDE_COMMAND","GamePlayerMention","PLAY_COMMAND","TIC_TAC_TOE_COMMAND","TIC_TAC_TOE_COMMAND_OPTIONS","TicTacToeData","board","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","concede","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","init","init","into","into","into_request","into_request","new","play","renderer","renderer","tic_tac_toe","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BOARD_COMMAND","BOARD_COMMAND_OPTIONS","board","CONCEDE_COMMAND","CONCEDE_COMMAND_OPTIONS","concede","PLAY_COMMAND","PLAY_COMMAND_OPTIONS","play","0","FONT_BYTES","HALF_SQUARE_SIZE_F32","MAX_PARALLEL_RENDER_LIMIT","RENDERED_SIZE","Renderer","SQUARE_SIZE","SQUARE_SIZE_F32","SQUARE_SIZE_USIZE","SkiaBuilder","background_pixmap","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","curve_to","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_path","into_request","into_request","line_to","move_to","new","new","number_paths","quad_to","render_board","render_board_async","render_semaphore","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","URBAN_COMMAND","URBAN_COMMAND_OPTIONS","UrbanClient","borrow","borrow_mut","client","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_request","new","publish_cache_stats","search","search_cache","to_owned","try_from","try_into","type_id","urban","vzip","FACES","UWUIFY_COMMAND","UWUIFY_COMMAND_OPTIONS","uwuify","uwuify_str","VAPORWAVE_COMMAND","VAPORWAVE_COMMAND_OPTIONS","vaporwave","vaporwave_str","XKCD_COMMAND","XKCD_COMMAND_OPTIONS","xkcd","ZALGO_COMMAND","ZALGO_COMMAND_OPTIONS","zalgo","ActivityKind","Config","DeviantArtConfig","Error","FmlConfig","Generic","InvalidToken","Listening","LogConfig","MissingStatusType","MissingStreamUrl","Playing","Severity","StatusConfig","Streaming","ValidationError","ValidationMessage","Warn","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data_dir","default","default_prefix","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deviantart","drop","drop","drop","drop","drop","drop","drop","drop","drop","endpoint","eq","equivalent","error","error","extra","extra","extra","extra","extra","fml","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","headers","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","kind","load_from_bytes","load_from_path","log","log_file_dir","name","password","prefix","serialize","severity","severity","status","status_name","status_type","status_url","to_owned","to_owned","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","username","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AuthorInGame","CHECK_IN_TIC_TAC_TOE_GAME_SQL","CREATE_TIC_TAC_TOE_GAME_SQL","DELETE_TIC_TAC_TOE_GAME_SQL","Database","Database","Database","GET_STORE_SQL","GET_TIC_TAC_TOE_GAME_SQL","InvalidMove","InvalidTurn","NextTurn","NotInAGame","OpponentInGame","PUT_STORE_SQL","SETUP_TABLES_SQL","TicTacToeCreateGameError","TicTacToeTryMoveError","TicTacToeTryMoveResponse","Tie","UPDATE_TIC_TAC_TOE_GAME_SQL","Winner","access_db","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_tic_tac_toe_game","db","delete_tic_tac_toe_game","delete_tic_tac_toe_game","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_reddit_embed_enabled","get_tic_tac_toe_game","get_tic_tac_toe_game","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_command_disabled","model","new","set_disabled_command","set_reddit_embed_enabled","source","source","store_get","store_put","store_update","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_tic_tac_toe_move","type_id","type_id","type_id","type_id","update_tic_tac_toe_game","vzip","vzip","vzip","vzip","game","game","game","loser","winner","0","Computer","MaybeGuildString","TicTacToeGame","TicTacToePlayer","TicTacToePlayerParseError","User","board","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","column_result","column_result","convert","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_str","from_str","get_hash","get_opponent","get_player","get_player_turn","get_team_turn","get_user","guild_id","hash","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_computer","is_user","iter_players","mention","ne","new","o_player","parse","source","to_owned","to_owned","to_owned","to_owned","to_sql","to_sql","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_move","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","x_player","0","DelayWriter","delay_writer","setup","0","Buffer","DEFAULT_CAPACITY","DelayWriter","DelayWriterInner","Writer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","flush","flush","fmt","fmt","from","from","init","init","init","init","into","into","into_request","into_request","new","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","write","write_all","write_all","0","DEFAULT_EXPIRE_TIME","ERR_EMOJI","LOADING_EMOJI","LoadingReaction","OK_EMOJI","TimedCache","TimedCacheEntry","TimedCacheInner","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","channel_id","clone","clone_into","data","data","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","expiry_time","fmt","fmt","fmt","force_trim","from","from","from","from","get_if_fresh","http","init","init","init","init","insert","insert_and_get","into","into","into","into","into_request","into_request","into_request","into_request","is_empty","is_fresh","last_trim","last_update","len","msg_id","new","new","send_fail","send_ok","send_reaction","sent_reaction","to_owned","trim","trim_time","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["pikadick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::checks","","pikadick::checks::admin","","pikadick::checks::enabled","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::client_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::cache_stats","","","pikadick::commands::cmd","","","","","","","pikadick::commands::deviantart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::fml","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::insta_dl","","","pikadick::commands::invite","","","pikadick::commands::iqdb","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::latency","","","pikadick::commands::nekos","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::ping","","","pikadick::commands::quizizz","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::r6stats","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::r6tracker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::reddit_embed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::rule34","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::shift","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::system","","","","","","","","","pikadick::commands::tic_tac_toe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::tic_tac_toe::board","","","pikadick::commands::tic_tac_toe::concede","","","pikadick::commands::tic_tac_toe::play","","","pikadick::commands::tic_tac_toe::renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::urban","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::commands::uwuify","","","","","pikadick::commands::vaporwave","","","","pikadick::commands::xkcd","","","pikadick::commands::zalgo","","","pikadick::configpikadick::database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::database::TicTacToeTryMoveResponse","","","","","pikadick::database::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::logger","","","","pikadick::logger::delay_writer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pikadick::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","The async entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Load a config.","","The main entry.","","","","","The actual entry point","","Pre-main setup","","","","","","","","","","","","","","","","Admin Check","Enabled Check","","","","","","Add a group to have its commands enabled/disabled.","","","Check if 2 <code>Check</code>s are the same.","","","A way to look up commands by CommandOptions and fn addr.","The set of all commands as strings.","","","","","","","","","Returns a mutex guard to the list of command names.","","","","Make a new <code>EnabledCheckData</code>.","","","","","","A tool to build cache stats","A type that can provide cache stats","The <code>ClientData</code>.","","","","","The config","The database","","","","","","The deviantart client","","","The enabled check data","The fml client","","","","","Generate cache stats Currently, In order for something to …","","Init this client data","","The insta client data","","","Get the inner stats","","","The iqdb client","The client for nekos","Make a new <code>CacheStatsBuilder</code>.","Publish stats to the provided <code>CacheStatsBuilder</code>.","Publish a stat to a section","The quizizz client","The R6Stats client","The r6tracker client","The reddit embed data","The rule34 client","The discord shard_manager","The shift client","","The tic tac toe data","","","","","","","The urban dictionary client","","","The xkcd client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A caching deviantart client","","","","","","","","","","","","","","","Make a new <code>DeviantartClient</code>.","","Search for deviantart images with a cache.","","Signs in if necessary","","","","","","","","A caching fml client","","","","","","","","","","","","","","","","","Make a new FmlClient","","Repopulate the cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Search for an image, with caching","","","","","","","","","","","Max images per single request","A nekos cache","The inner cache data","","","The nekos client","","","Add a url to the cache","Add many urls to the cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a cache","Get a random url","Get a random nekos image","","","","","","","","","","","","","","","","","Make a new cache","Make a new nekos client","","","Repopulate a cache","","Check if the primary cache is emoty","Get the size of the primary cache","","","Check if the secondary cache is empty","Get the size of the secondary cache","","","","","","","","","","","","","","","","","","","","","","","","","","A Cache for quizzizz codes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if it is empty","Get the # of entries","Make a new <code>QuizizzClient</code>.","Make a new cache","Add a code to the cache","","Get the next searched code.","","Trim the cache","Trim the cache and pop a code if it exists","","","","","","","","","","","","","","","","","","","","","","","Get stats","","","","","","","","","","","","","","","","R6Tracker stats for a user","","","","","","","","","","","","","","","","","","","Get R6Tracker stats","","","","","","","Make a new r6 client with caching","","","","","","The value is <code>None</code> if the user could not be found","","","","","","","","","","","","","","","Source: https://urlregex.com/","","","","","","","","","","","","","","","","","","","","Get the original post from a given subreddit and post id.","Get video data from reddit.tube. Takes a reddit url.","","","","","","","","","Gets the subreddit and post id from a reddit url.","Process a message and insert an embed if neccesary.","","","","","","","","","","","","","","","","A caching rule34 client","","","","","","","","","","","","","","","Search for a query.","","Make a new <code>Rule34Client</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a random shift code (PC only for now…)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data pertaining to running tic_tac_toe games","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new <code>TicTacToeData</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render a Tic-Tac-Toe board","","","","Utility to draw a font glyph to a path.","","","","","","","","","","","","","","","","","","","","","","","","","Get the inner <code>tiny_skia::Path</code>.","","","","","Make a new <code>Renderer</code>.","Make a new <code>SkiaBuilder</code>.","","","Render a Tic-Tac-Toe board with <code>tiny_skia</code>.","Render a Tic-Tac-Toe board on a threadpool","","","","","","","","","","","","","A Caching Urban Dictionary Client","","","","","","","","","","","","","","","Make a new <code>UrbanClient</code>.","","Get the top result for a query.","","","","","","","","","","","","A rust-optimized version of:","","","","","","","","","","","","The bot config","Deviant Config","","FML config","","","","Log Config","","","","","","","Validation Errors","","","","","","","","","","","","","","","","","","","","","","","","","Data dir","","","","","","","","","","","","","","","","","","","","","","","","","","","DeviantArt config","","","","","","","","","","The OTLP endpoint","","","","","Unknown extra data","Unknown extra data","Unknown extra data","Unknown extra data","","FML config","","","","","","","","","","","","","","","","","","","","Headers","","","","","","","","","","","","","","","","","","","","","","","","","","","","FML API key","","Load a config from bytes","Load a config from a path","The log config","The log file dir","","Password","Prefix for the bot","","","","Status config","Shortcut for getting the status name","Shortcut for getting the status type","Shortcut for getting the status url","","","","The discord token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Username","Validate a config","","","","","","","","","","The author is in a game","","","","The database","Error accessing the database","Error accessing the database","","","The move is invalid","It is not the user’s turn","The next turn executed","The user is not in a game","The opponent is in a game","","","Error that may occur while creating a tic-tac-toe game","Error that may occur while performing a tic-tac-toe move","The response for making a tic-tac-toe move","There was a tie","","There was a winner","Access the db on the tokio threadpool","","","","","","","","","","","","","Create a new tic-tac-toe game","","","Try to delete a Tic-Tac-Toe game.","","","","","","","","","","","","","","","","","","","","","","","Get the reddit embed setting.","","Try to get a tic-tac-toe game by guild and player","","","","","","","","","","","","","Check if a command is disabled","","","Disables or enables a command.","Enable or disable reddit embeds.","","","Get a key from the store","Put a key in the store","Get and Put a key in the store in one action, ensuring …","","","","","","","","","","","","","Try to make a tic-tac-toe move","","","","","","","","","","","","","","","","AI player","A String wrapper for a <code>GuildId</code>","A Tic-Tac-Toe game","A player of Tic-Tac-Toe","","Another user","The game board","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the opponent of the given user in this <code>TicTacToeGame</code>.","Get the player for the given team.","Get the player whos turn it is","Get whos turn it is","Extract the user id if this is a user","","","","","","","","","","","","","","","Check if this player is a computer","Check if this player is a user","Iterate over all <code>TicTacToePlayer</code>s.","Get the “mention” for a user.","","Make a new <code>TicTacToeGame</code>.","The o player","","","","","","","","","","","","","","","","","","Try to make a move.","","","","","","","","","The x player","","A writer that buffers data until it is assigned a file to …","","Try to setup a logger.","","The buffered data.","","A writer that buffers data until it is assigned a file to …","The mut impl of a DelayWriter","The file being written to.","","","","","","","","","","","","","","","","","","","","Try to init this DelayWriterInner with a file.","","","Try to init this DelayWriter","","","","","Make a new DelayWriterInner with an empty buffer","Create a new DelayWriter","","","","","","","","","","","","","","","10 minutes","","","This type attaches to a message and displays a loading …","","A cache with entries that “expire” after a per-cache …","","","","","","","","","","","","","","","Get data ref","","","","","","","","","","","","","","","","","","","","Trims expired entries, ignoring last trim time.","","","","","Get a value if fresh, or None if it doesn’t exist or is …","","","","","","Insert a K/V","Insert a K/V and return the data for the newly inserted …","","","","","","","","","Checks if cache is empty. Included expired entries.","time is expire time","","","Gets the number of entries. Includes expired entries.","","Create a cache with timed entries with a default expire …","Create a Loading Reaction attatched to a message.","","","","","","Trims expired entries","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,0,0,2,2,0,0,0,1,2,3,1,2,3,1,2,3,2,1,2,3,0,0,1,2,3,1,2,3,1,2,3,0,0,0,1,0,0,1,0,1,0,2,1,2,3,1,2,3,1,2,3,0,0,1,2,3,0,0,0,0,0,0,0,4,4,4,0,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,5,6,5,6,6,6,5,5,6,5,6,6,5,6,6,6,5,6,5,6,6,5,6,6,6,5,6,5,5,6,6,6,5,7,5,6,6,6,6,6,6,6,5,6,5,6,5,6,5,6,6,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,9,9,9,9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,0,0,0,11,0,0,0,0,0,0,0,0,11,11,12,13,11,14,15,12,13,11,14,15,15,15,11,15,11,15,12,11,15,12,13,11,14,15,12,13,11,14,15,12,13,11,14,15,13,11,14,15,12,13,11,14,15,12,12,15,11,15,12,13,11,14,15,12,13,11,14,15,12,13,11,14,15,0,11,15,15,12,15,14,11,11,15,14,11,11,11,15,12,13,11,14,15,12,13,11,14,15,12,13,11,14,15,12,13,11,14,15,0,0,0,0,0,0,0,0,0,0,0,16,17,16,17,17,16,16,16,17,16,17,16,17,16,17,0,16,16,16,17,16,17,16,17,16,17,16,17,17,17,16,17,17,0,16,16,17,17,16,17,16,17,16,17,16,17,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18,0,0,0,0,19,20,19,20,20,20,20,20,19,20,19,20,19,20,19,20,19,20,20,19,20,19,20,19,20,20,19,19,19,20,0,20,20,19,20,19,20,19,20,19,20,0,0,0,0,0,0,21,21,22,21,22,22,22,22,22,21,21,22,21,22,21,22,22,21,22,22,22,21,22,21,21,22,21,22,22,0,22,22,22,0,22,22,21,22,21,22,21,22,21,22,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,23,23,23,23,23,24,25,0,0,0,0,0,24,25,26,24,25,26,26,26,26,24,26,24,25,26,24,25,26,24,25,26,25,26,24,25,26,24,24,26,24,25,26,24,25,26,24,25,26,26,26,24,26,0,26,24,25,26,24,25,26,24,25,26,24,25,26,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,28,27,28,27,28,27,28,27,0,28,28,27,28,27,28,27,28,27,27,28,27,28,27,28,27,28,27,28,0,0,28,0,28,27,27,28,27,28,27,28,27,28,27,0,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,30,30,29,30,29,30,30,29,29,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,29,30,29,29,29,30,29,30,29,30,30,30,30,30,29,30,29,30,29,30,29,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,33,33,34,0,33,33,34,0,0,34,0,0,32,35,36,37,38,39,34,40,33,32,35,36,37,38,39,34,40,33,32,34,32,34,32,35,34,0,35,36,37,38,39,34,40,33,32,35,36,37,38,39,34,40,33,32,35,36,37,38,39,34,35,35,36,37,38,39,34,40,33,32,38,34,34,40,40,35,36,37,38,39,35,35,36,37,38,39,34,40,33,33,32,35,36,37,38,39,34,40,33,32,38,35,36,37,38,39,34,40,33,32,35,36,37,38,39,34,40,33,32,35,36,37,38,39,34,40,33,32,36,39,35,35,35,35,39,37,35,34,40,40,35,35,35,35,34,32,33,35,35,36,37,38,39,34,40,33,32,35,36,37,38,39,34,40,33,32,35,36,37,38,39,34,40,33,32,39,37,35,35,36,37,38,39,34,40,33,32,41,0,0,0,0,41,42,0,0,42,42,43,42,41,0,0,0,0,0,43,0,43,44,41,42,43,44,41,42,43,44,43,44,43,44,44,44,0,44,41,42,43,44,41,42,43,44,41,42,43,44,41,41,42,42,43,44,41,42,43,44,44,0,44,41,42,43,44,41,42,43,44,41,42,43,44,44,0,44,44,44,41,42,44,44,44,43,44,41,42,41,42,43,44,41,42,43,44,44,41,42,43,44,0,41,42,43,44,45,46,47,45,45,48,49,0,0,0,0,49,50,50,48,49,51,50,48,49,51,50,48,49,51,50,48,49,51,49,51,49,50,48,49,51,50,48,49,51,50,48,49,51,49,49,50,48,48,49,51,50,48,49,49,51,51,49,49,49,50,50,50,50,49,51,49,50,48,49,51,50,48,49,51,50,48,49,51,49,49,50,49,49,50,50,49,48,50,48,49,51,49,51,48,50,48,49,51,50,48,49,51,50,50,48,49,51,50,48,49,51,50,52,0,0,0,52,53,0,0,0,53,53,52,53,52,52,52,52,53,52,53,52,53,52,53,52,53,52,53,52,53,53,52,52,53,52,53,52,53,52,52,53,52,53,52,53,52,53,52,53,52,53,52,54,0,0,0,0,0,0,0,0,54,55,56,57,54,55,56,57,55,56,54,54,57,57,54,54,55,56,57,54,55,56,57,54,55,56,56,57,55,54,56,57,54,54,55,56,57,54,56,54,55,56,57,54,54,54,55,56,57,54,55,56,57,54,57,55,57,54,56,54,56,56,56,56,56,54,54,55,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57],"f":[null,null,null,null,null,null,null,null,[[["commandresult",6],["str",15],["message",3],["context",3]],["boxfuture",6]],[[["config",3],["bool",15]]],[[["message",3],["str",15],["context",3]],[["boxfuture",6,["bool"]],["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["clientdatakey",3]],[[]],null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["arc",3,["mutex"]],["mutex",3,["shardmanager"]]]],[[["helpoptions",3],["userid",3],["args",3],["message",3],["hashset",3,["userid"]],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],[["result",6,["config"]],["config",3]]],null,[[]],[[["context",3],["message",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["message",3],["dispatcherror",4],["context",3]],["boxfuture",6]],[[["message",3],["dispatcherror",4],["context",3]]],[[["context",3],["ready",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["config",3],["bool",15],["workerguard",3],["runtime",3]],["result",6]],[[["context",3],["resumedevent",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["message",3],["str",15],["context",3]],["boxfuture",6]],null,[[]],[[]],[[]],null,null,null,[[["commandoptions",3],["message",3],["args",3],["context",3]],[["boxfuture",6,["result"]],["result",4,["reason"]]]],null,null,null,[[]],[[]],[[]],[[["check",3]],["bool",15]],[[],["enabledcheckdata",3]],[[]],null,null,[[],["enabledcheckdata",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["commandoptions",3],["message",3],["args",3],["context",3]],[["boxfuture",6,["result"]],["result",4,["reason"]]]],[[["formatter",3]],["result",6]],[[]],[[["commandoptions",3]],[["string",3],["option",4,["string"]]]],[[],[["vec",3,["string"]],["rawmutex",3],["mutexguard",3,["rawmutex","vec"]]]],[[],["usize",15]],[[]],[[],["request",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["btreemap",3,["str","f32"]],["btreemap",3,["str","btreemap"]],["str",15]]],[[],["usize",15]],[[["arc",3,["mutex"]],["config",3],["mutex",3,["shardmanager"]],["database",3]]],[[],["usize",15]],null,[[]],[[]],[[],[["btreemap",3,["str","f32"]],["btreemap",3,["str","btreemap"]],["str",15]]],[[],["request",3]],[[],["request",3]],null,null,[[]],[[["cachestatsbuilder",3]]],[[["f32",15],["str",15]]],null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[["bool",15]],["str",15]],null,null,null,null,null,[[]],[[]],null,[[],["deviantartclient",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["database",3]]],[[["cachestatsbuilder",3]]],[[["str",15],["database",3]]],null,[[["str",15],["database",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],null,null,[[],["fmlclient",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[["formatter",3]],["result",6]],[[]],[[],[["article",3],["option",4,["article"]]]],[[],["usize",15]],[[]],[[],["request",3]],[[["string",3]]],[[["cachestatsbuilder",3]]],[[]],[[],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,null,[[]],[[]],null,[[],["iqdbclient",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[]],[[["cachestatsbuilder",3]]],[[["str",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,null,null,null,null,null,null,null,[[["url",3]]],[[["iterator",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["cache",3]],[[],["nekosclient",3]],[[]],[[]],[[["str",15],["option",4,["channelid"]],["channelid",3],["option",4,["guildid"]],["context",3],["guildid",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["bool",15]],["cache",3]],[[]],[[["bool",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[]],[[]],null,[[["context",3],["str",15],["message",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["bool",15]]],null,[[],["bool",15]],[[],["usize",15]],[[["cachestatsbuilder",3]]],null,[[],["bool",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["quizizzclient",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["arc",3,["notify"]],["searchresult",6],["notify",3],["watchsender",3,["searchresult"]]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[],["usize",15]],[[]],[[]],[[["string",3]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[]],[[]],[[]],[[],[["string",3],["option",4,["string"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],null,[[],["r6statsclient",3]],[[]],[[],["r6statsclient",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["str",15]]],[[],["usize",15]],[[]],[[],["request",3]],[[]],[[["cachestatsbuilder",3]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["r6trackerclient",3]],[[]],[[],["r6trackerclient",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],null,[[["createembed",3]],["createembed",3]],null,[[["cachestatsbuilder",3]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["redditembeddata",3]],[[]],[[],["redditembeddata",3]],[[["usize",15]]],[[],["regex",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[["url",3]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],[[["url",3]],["option",4]],[[["message",3],["context",3]]],[[["cachestatsbuilder",3]]],null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],null,[[],["rule34client",3]],[[]],[[],["rule34client",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[["str",15]]],null,[[],["rule34client",3]],[[["cachestatsbuilder",3]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["shiftclient",3]],[[]],[[["str",15],["option",4,["channelid"]],["channelid",3],["option",4,["guildid"]],["context",3],["guildid",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],["shiftclient",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["str",15]],["result",4]],[[["game",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[]],null,[[["context",3],["str",15],["message",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[["cachestatsbuilder",3]]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,[[["u64",15]],[["local",3],["datetime",3,["local"]]]],[[["frequency",6]],["string",3]],[[["memory",3]],["string",3]],[[["swap",3]],["string",3]],[[["duration",3]],["string",3]],[[]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["tictactoedata",3]],[[],["gameplayermention",3]],[[]],[[]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],null,null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["renderer",3]],[[]],[[]],[[["f32",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],[["path",3],["option",4,["path"]]]],[[],["request",3]],[[],["request",3]],[[["f32",15]]],[[["f32",15]]],[[],["result",6]],[[]],null,[[["f32",15]]],[[["board",3]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[["board",3]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],null,[[],["urbanclient",3]],[[]],[[],["urbanclient",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["urbanclient",3]],[[["cachestatsbuilder",3]]],[[["str",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[]],null,null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[["str",15]],["string",3]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],[[["str",15]],["string",3]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,[[["message",3],["args",3],["context",3]],[["commandresult",6],["boxfuture",6,["commandresult"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["activitykind",4]],[[],["severity",4]],[[]],[[]],null,[[]],[[],["string",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["activitykind",4]],["bool",15]],[[],["bool",15]],[[],["validationerror",4]],null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,[[],["result",6]],[[["path",3]],["result",6]],null,[[],["pathbuf",3]],null,null,null,[[],["result",4]],[[],["severity",4]],null,null,[[],[["str",15],["option",4,["str"]]]],[[],[["option",4,["activitykind"]],["activitykind",4]]],[[],[["str",15],["option",4,["str"]]]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],[["validationmessage",3],["vec",3,["validationmessage"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tictactoetrymoveresponse",4]],[[],["database",3]],[[]],[[]],[[["maybeguildstring",3],["tictactoeplayer",4],["team",4]]],null,[[["transaction",3],["i64",15]],["result",6]],[[["maybeguildstring",3],["tictactoeplayer",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["guildid",3]]],[[["maybeguildstring",3],["transaction",3],["tictactoeplayer",4]],[["option",4],["result",6,["option"]]]],[[["maybeguildstring",3],["tictactoeplayer",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["guildid",3],["str",15]]],null,[[["path",3],["bool",15]]],[[["guildid",3],["str",15],["bool",15]]],[[["guildid",3],["bool",15]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["maybeguildstring",3],["tictactoeplayer",4],["u8",15]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["board",3],["transaction",3],["i64",15]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tictactoegame",3]],[[],["tictactoeplayerparseerror",3]],[[],["tictactoeplayer",4]],[[],["maybeguildstring",3]],[[]],[[]],[[]],[[]],[[["valueref",4]],["fromsqlresult",6]],[[["valueref",4]],["fromsqlresult",6]],[[["str",15],["option",4,["channelid"]],["channelid",3],["option",4,["guildid"]],["context",3],["guildid",3]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["tictactoeplayer",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["userid",3]]],[[]],[[["guildid",3],["option",4,["guildid"]]]],[[]],[[["str",15]],["result",4]],[[["str",15]],[["pin",3,["box"]],["box",3,["future","global"]]]],[[],["u64",15]],[[["tictactoeplayer",4]],[["tictactoeplayer",4],["option",4,["tictactoeplayer"]]]],[[["team",4]],["tictactoeplayer",4]],[[],["tictactoeplayer",4]],[[],["team",4]],[[],[["userid",3],["option",4,["userid"]]]],null,[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["gameplayermention",3]],[[["tictactoeplayer",4]],["bool",15]],[[["tictactoeplayer",4]]],null,[[["context",3],["str",15],["message",3]],[["box",3,["future","global"]],["pin",3,["box"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[]],[[],[["tosqloutput",4],["result",6,["tosqloutput"]]]],[[],[["tosqloutput",4],["result",6,["tosqloutput"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["team",4],["u8",15]],["bool",15]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,[[["config",3]],[["result",6,["workerguard"]],["workerguard",3]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",6]],[[],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],["usize",15]],[[],["usize",15]],[[],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],[["result",6,["usize"]],["usize",15]]],[[],[["result",6,["usize"]],["usize",15]]],[[],["result",6]],[[],["result",6]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],[["arc",3,["timedcacheentry"]],["option",4,["arc"]]]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[],[["arc",3,["timedcacheentry"]],["timedcacheentry",3]]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[["duration",3]],["bool",15]],null,null,[[],["usize",15]],null,[[]],[[["arc",3,["http"]],["http",3],["message",3]]],[[]],[[]],[[["into",8,["reactiontype"]],["reactiontype",4]]],null,[[]],[[],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[3,"Handler"],[3,"ClientDataKey"],[3,"General"],[3,"EnabledCheckData"],[3,"CacheStatsBuilder"],[3,"ClientData"],[8,"CacheStatsProvider"],[3,"DeviantartClient"],[3,"FmlClient"],[3,"IqdbClient"],[3,"Cache"],[3,"NsfwArg"],[3,"NsfwArgParseError"],[3,"CacheInner"],[3,"NekosClient"],[3,"QuizizzClient"],[3,"CodeCache"],[3,"R6StatsClient"],[3,"Stats"],[3,"R6TrackerClient"],[3,"URL_REGEX"],[3,"RedditEmbedData"],[3,"Rule34Client"],[3,"GameArg"],[3,"GameParseError"],[3,"ShiftClient"],[3,"GamePlayerMention"],[3,"TicTacToeData"],[3,"SkiaBuilder"],[3,"Renderer"],[3,"UrbanClient"],[4,"Severity"],[4,"ValidationError"],[4,"ActivityKind"],[3,"Config"],[3,"FmlConfig"],[3,"DeviantArtConfig"],[3,"LogConfig"],[3,"StatusConfig"],[3,"ValidationMessage"],[4,"TicTacToeCreateGameError"],[4,"TicTacToeTryMoveError"],[4,"TicTacToeTryMoveResponse"],[3,"Database"],[13,"Winner"],[13,"Tie"],[13,"NextTurn"],[3,"TicTacToePlayerParseError"],[4,"TicTacToePlayer"],[3,"TicTacToeGame"],[3,"MaybeGuildString"],[3,"DelayWriter"],[4,"DelayWriterInner"],[3,"TimedCache"],[3,"TimedCacheInner"],[3,"LoadingReaction"],[3,"TimedCacheEntry"]]},\
"quizizz":{"doc":"","t":[3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,3,3,3,3,3,3,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Client","Error","InvalidGenericResponse","Reqwest","borrow","borrow","borrow_mut","borrow_mut","check_room","clone","clone_into","default","fmt","fmt","fmt","from","from","from","from","into","into","new","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","types","CheckRoomJsonRequest","GenericResponse","GenericResponseError","GroupsInfo","GroupsInfoData","Room","RoomOptions","RoomSubscription","RoomVersion","Traits","ads_free","assigned","assigned_to","assignment_title","assignments","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branding","cid","code","collection_id","course_id","create","create_group","created_at","data","deleted","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","error","error_for_response","experiment","expiry","extra","extra","extra","extra","extra","extra","extra","extra","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","gcl","group_ids","groups_info","has_gcl","hash","host_id","host_occupation","host_session_id","into","into","into","into","into","into","into","into","into","into","is_player_login_required","is_quiz_without_correct_answer","is_room_not_found","is_running","is_shared","jumble","jumble_answers","kind","kind","kind","limit_attempts","login_required","memes","message","mode","nickname_generator","options","organization","player","player_limit","powerups","questions","quiz_id","redemption","reopenable","reopened","replay_of","room","room_code","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","show_answers","show_answers_2","sim_game","solo_apis","started_at","state","student_leaderboard","student_music","student_quiz_review","student_quiz_review_2","subscription","timer","title","to_string","total_answerable_questions","total_correct","total_players","total_questions","total_slides","traits","trial_end_at","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_id","version","version","version_id"],"q":["quizizz","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quizizz::typesd":["A quizizz Client","Library Error","Invalid Generic Response","Reqwest HTTP Error","","","","","Check if the room code exists","","","","","","","","","","","","","Make a new client","","","","","","","","","","Api Types","Check Room Request","Api Response","Api Response Error","Groups Info","Groups Info Data","A quiz Room","Room Options","Room subscription info","Room Version Info","Traits","Whether it is ads free","Unknown","Unknown","Assignment Title","Unknown","","","","","","","","","","","","","","","","","","","","","Unknown","Unknown","Room Code","Unknown","Course ID","Unknown","Unknown","Creation date","Unknown","Whether quiz was deleted","Description","","","","","","","","","","","Error","Change this into a result if it is an error.","Unknown","Expire interval","Other","Other","Other","Other","Other","Other","Other","Other","Other","","","","","","","","","","","","","","","","","","","","","","Unknown","Group Ids","Groups info","Whether there is a gcl","Quiz hash","Host Id","Host Occupation","Host Session ID","","","","","","","","","","","Returns <code>true</code> if it’s kind is <code>\\\"player.LOGIN_REQUIRED\\\"</code>","Whether questions don’t have correct answers","Returns <code>true</code> if it’s kind is <code>\\\"room.NOT_FOUND\\\"</code>","Whether this room is running","Whether this room is shared","Unknown","Unknown","Error Type","The type of room","Type","Attempt Limit","Whether login is required","Whether memes are enabled","Error Message","Mode","Whether nickname generator is used","Room options","Organization","Player Object","The player limit","Whether powerups are enabled","List of question ids","Quiz ID","Whether redemption is active","Whether the quiz is reopenable","Whether this was reopened","Unknown","Room Object","Room code","","","","","","","","","","","Whether answers are shown","Show Answers as str","Whether this game is a simulation","Unknown","Started at","Room state","Whether there is a student leaderboard","Whether there is music","Whether it is a student review","Wtudent quiz review as str","Room subscription info","Whether there is a timer","Title","","The number of answerable questions","Total correct","Total players","Total # of questions","The # of slides","Quiz traits","When the trial ends","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unit ID","Versions","Version number","Version Id"],"i":[0,0,1,1,2,1,2,1,2,2,2,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,3,4,4,5,5,6,7,8,5,9,4,10,11,12,3,6,7,8,5,9,4,10,11,12,3,3,7,5,5,5,4,5,5,4,5,10,6,7,8,5,9,4,10,11,12,3,7,7,5,5,7,8,5,9,4,10,11,12,3,6,7,8,8,5,9,4,10,11,12,3,6,7,8,5,9,4,10,11,12,3,4,5,5,4,5,5,5,5,6,7,8,5,9,4,10,11,12,3,8,9,8,5,5,11,11,8,5,12,11,11,11,8,4,11,5,5,7,3,11,5,5,11,5,5,5,7,6,6,7,8,5,9,4,10,11,12,3,11,11,5,5,5,5,11,11,11,11,5,11,10,8,5,5,5,5,9,5,3,6,7,8,5,9,4,10,11,12,3,6,7,8,5,9,4,10,11,12,3,6,7,8,5,9,4,10,11,12,3,5,5,12,5],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[["str",15]]],[[],["client",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[["genericresponseerror",3]]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],[["error",4],["result",4,["error"]]]],null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null],"p":[[4,"Error"],[3,"Client"],[3,"RoomSubscription"],[3,"GroupsInfo"],[3,"Room"],[3,"CheckRoomJsonRequest"],[3,"GenericResponse"],[3,"GenericResponseError"],[3,"Traits"],[3,"GroupsInfoData"],[3,"RoomOptions"],[3,"RoomVersion"]]},\
"r6stats":{"doc":"","t":[4,13,6,13,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,3,3,3,3,3,3,3,3,3,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Error","Json","R6Result","Reqwest","borrow","borrow_mut","client","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","types","Client","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","new","search","to_owned","try_from","try_into","type_id","search_data","ApiResponse","ProgressionStats","SeasonalStats","UserData","abandons","avatar_banned","avatar_url_146","avatar_url_256","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","champions_rank_position","claimed","created_at","created_for_date","data","deaths","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","generic_stats","generic_stats","into","into","into","into","kd","kills","last_match_mmr_change","last_match_skill_mean_change","last_match_skill_standard_deviation_change","last_updated","level","lootbox_probability","losses","max_mmr","max_rank","mmr","mmr","next_rank_mmr","platform","prev_rank_mmr","progression_stats","rank","region","seasonal_stats","serialize","serialize","serialize","serialize","skill_mean","skill_standard_deviation","total_xp","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ubisoft_id","unknown","unknown","unknown","updated_at","uplay_id","username","wins","wl","Bomb","GameMode","General","GenericStats","Hostage","Queue","QueueStat","SecureArea","Timestamps","assists","barricades_deployed","best_score","best_score","best_score","blind_kills","bomb","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bullets_fired","bullets_hit","casual","created","dbnos","deaths","deaths","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distance_travelled","draws","draws","extractions_denied","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gadgets_destroyed","gamemode","games_played","games_played","games_played","games_played","games_played","general","headshots","hostage","into","into","into","into","into","into","into","into","into","kd","kd","kills","kills","kills_as_attacker_in_objective","kills_as_defender_in_objective","last_updated","losses","losses","losses","losses","losses","melee_kills","other","penetration_kills","playtime","playtime","playtime","playtime","playtime","queue","ranked","rappel_breaches","reinforcements_deployed","revives","secure_area","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","suicides","times_objective_secured","timestamps","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unknown","unknown","unknown","unknown","unknown","unknown","unknown","unknown","wins","wins","wins","wins","wins","wl","wl","wl","wl","wl"],"q":["r6stats","","","","","","","","","","","","","","","","","","","r6stats::client","","","","","","","","","","","","","","","r6stats::types","r6stats::types::search_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6stats::types::search_data::generic_stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Library Error Type","Json Error","Library Result Type","Reqwest HTTP Error","","","","","","","","","","","","","","","","An R6Stats client","","","","","","","","","Make a new client","Search for a PC user’s profile by name.","","","","","","Api Response","","","User Datai":[0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,3,4,4,4,5,4,6,3,5,4,6,3,3,4,3,3,5,3,5,4,6,3,5,4,6,3,5,4,6,3,0,4,5,4,6,3,4,3,3,3,3,4,6,6,3,3,3,4,3,3,4,3,4,3,3,4,5,4,6,3,3,3,6,5,4,6,3,5,4,6,3,5,4,6,3,4,4,6,3,3,4,4,3,4,0,0,0,0,0,0,0,0,0,7,7,8,9,10,7,11,12,11,8,9,10,7,13,14,15,12,11,8,9,10,7,13,14,15,7,7,13,15,7,7,14,12,11,8,9,10,7,13,14,15,7,7,14,9,12,11,8,9,10,7,13,14,15,12,11,8,9,10,7,13,14,15,7,12,8,9,10,7,14,12,7,11,12,11,8,9,10,7,13,14,15,7,14,7,14,10,10,15,8,9,10,7,14,7,13,7,8,9,10,7,14,12,13,7,7,7,11,12,11,8,9,10,7,13,14,15,7,10,12,12,11,8,9,10,7,13,14,15,12,11,8,9,10,7,13,14,15,12,11,8,9,10,7,13,14,15,12,11,8,9,10,7,13,14,15,8,9,10,7,14,8,9,10,7,14],"f":[null,null,null,null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[["error",3]]],[[]],[[],[["error",8],["option",4,["error"]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["client",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],[["option",4,["f64"]],["f64",15]]],null,null,null,null,null,null,null,null,null,null,[[],[["option",4,["u32"]],["u32",15]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[],[["option",4,["f64"]],["f64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Error"],[3,"Client"],[3,"SeasonalStats"],[3,"UserData"],[3,"ApiResponse"],[3,"ProgressionStats"],[3,"General"],[3,"Bomb"],[3,"Hostage"],[3,"SecureArea"],[3,"GameMode"],[3,"GenericStats"],[3,"Queue"],[3,"QueueStat"],[3,"Timestamps"]]},\
"r6tracker":{"doc":"","t":[18,18,18,18,18,18,18,3,18,4,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,6,18,18,18,18,13,18,18,18,3,18,18,18,18,18,18,18,18,18,13,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,12,13,3,3,3,3,4,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,12,12,11,11,11,11,12,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,12,11,11,12,12,12,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,4,13,13,13,13,13,13,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,12,12,12,0,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,12,12,11,11,12,12,11,11,11,11,11,11,12,12,11],"n":["ACCEPTED","ALREADY_REPORTED","BAD_GATEWAY","BAD_REQUEST","CONFLICT","CONTINUE","CREATED","Client","EXPECTATION_FAILED","Error","FAILED_DEPENDENCY","FORBIDDEN","FOUND","GATEWAY_TIMEOUT","GONE","HTTP_VERSION_NOT_SUPPORTED","IM_A_TEAPOT","IM_USED","INSUFFICIENT_STORAGE","INTERNAL_SERVER_ERROR","InvalidApiResponse","InvalidOverwolfResponse","LENGTH_REQUIRED","LOCKED","LOOP_DETECTED","METHOD_NOT_ALLOWED","MISDIRECTED_REQUEST","MOVED_PERMANENTLY","MULTIPLE_CHOICES","MULTI_STATUS","NETWORK_AUTHENTICATION_REQUIRED","NON_AUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_EXTENDED","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","NO_CONTENT","OK","PARTIAL_CONTENT","PAYLOAD_TOO_LARGE","PAYMENT_REQUIRED","PERMANENT_REDIRECT","PRECONDITION_FAILED","PRECONDITION_REQUIRED","PROCESSING","PROXY_AUTHENTICATION_REQUIRED","R6Result","RANGE_NOT_SATISFIABLE","REQUEST_HEADER_FIELDS_TOO_LARGE","REQUEST_TIMEOUT","RESET_CONTENT","Reqwest","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","StatusCode","TEMPORARY_REDIRECT","TOO_MANY_REQUESTS","UNAUTHORIZED","UNAVAILABLE_FOR_LEGAL_REASONS","UNPROCESSABLE_ENTITY","UNSUPPORTED_MEDIA_TYPE","UPGRADE_REQUIRED","URI_TOO_LONG","USE_PROXY","Url","VARIANT_ALSO_NEGOTIATES","as_str","as_u16","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonical_reason","clone","clone","clone_into","clone_into","cmp","default","default","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_str","from_u16","get_hash","get_overwolf_player","get_profile","get_sessions","hash","into","into","into","is_client_error","is_informational","is_redirection","is_server_error","is_success","ne","new","partial_cmp","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","overwolf","platform","sessions_data","stat","user_data","0","Invalid","InvalidOverwolfResponseError","OverwolfOperator","OverwolfPlayer","OverwolfRank","OverwolfResponse","OverwolfSeason","SeasonalOperators","Valid","avatar","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_rank","current_season","current_season_best_region","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_current_casual_season","get_lifetime_ranked_kd","get_lifetime_ranked_win_pct","get_max_season","get_valid","img","img","into","into","into","into","into","into","into","into_result","is_attack","is_premium","is_ranked","is_top_operator","iter_placed_ranked_seasons","iter_ranked_seasons","kd","kd","kills","kills","level","lifetime_stats","lifetime_stats","matches","max_mmr","max_rank","mmr","mmr","mmr_change","name","name","next_rank","operators","operators","player_id","prev_rank","rank_icon","rank_name","rank_name","rank_tier","region","region_label","season","seasonal_operators","seasons","serialize","serialize","serialize","serialize","serialize","started_tracking","suspected_cheater","take_valid","time_played","time_played_display","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unknown","unknown","unknown","unknown","win_pct","win_pct","wins","wins","BestMmr","LifetimeStats","best_mmr","blind_kills","borrow","borrow","borrow_mut","borrow_mut","deaths","deserialize","deserialize","fmt","fmt","from","from","headshot_pct","headshots","img","into","into","kd","kills","losses","matches","melee_kills","mmr","name","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","unknown","unknown","win_pct","wins","xp","0","InvalidPlatformCode","Pc","Platform","Ps4","Xbox","as_u32","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","eq","equivalent","fmt","fmt","fmt","from","from","from_u32","into","into","serialize","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","Match","Session","SessionsData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","duration","ended_at","fmt","fmt","fmt","from","from","from","id","into","into","into","is_active","items","kind","matches","metadata","serialize","serialize","serialize","started_at","stats","stats","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unknown","unknown","unknown","Metadata","Stat","borrow","borrow","borrow_mut","borrow_mut","category_key","category_name","description","deserialize","deserialize","display_value","fmt","fmt","from","from","icon_url","icon_url","into","into","is_reversed","key","metadata","name","name","percentile","rank","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","unknown","unknown","value","0","ApiError","ApiResponse","BronzeI","BronzeII","BronzeIII","BronzeIV","BronzeV","Champion","CopperI","CopperII","CopperIII","CopperIV","CopperV","Diamond","GoldI","GoldII","GoldIII","Invalid","InvalidApiResponseError","Metadata","PlatinumI","PlatinumII","PlatinumIII","Rank","SilverI","SilverII","SilverIII","SilverIV","SilverV","Unranked","UserData","Valid","account_id","avatar_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","country_code","current_mmr","current_mmr_america","current_mmr_image","current_season_color","current_season_name","deserialize","deserialize","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_deaths","get_kills","get_latest_season","get_max_season","id","into","into","into","into","into","into","into_result","kd","kind","latest_region","latest_season","message","metadata","name","name","picture_url","platform_id","platform_user_handle","season","season_color","season_color_u32","segment_controls","serialize","serialize","stats","stats_category_order","take_invalid","take_valid","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unknown","wl","Metadata","Season","borrow","borrow","borrow_mut","borrow_mut","current_mmr","deserialize","deserialize","fmt","fmt","from","from","id","into","into","kind","max_mmr","max_rank","metadata","name","segment","serialize","serialize","stats","stats_category_order","try_from","try_from","try_into","try_into","type_id","type_id","unknown","unknown","wl"],"q":["r6tracker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6tracker::types","","","","","r6tracker::types::overwolf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6tracker::types::overwolf::lifetime_stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6tracker::types::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6tracker::types::sessions_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6tracker::types::stat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6tracker::types::user_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","r6tracker::types::user_data::season","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["202 Accepted [RFC7231, Section 6.3.3]","208 Already Reported [RFC5842]","502 Bad Gateway [RFC7231, Section 6.6.3]","400 Bad Request [RFC7231, Section 6.5.1]","409 Conflict [RFC7231, Section 6.5.8]","100 Continue [RFC7231, Section 6.2.1]","201 Created [RFC7231, Section 6.3.2]","R6tracker Client","417 Expectation Failed [RFC7231, Section 6.5.14]","Error Type","424 Failed Dependency [RFC4918]","403 Forbidden [RFC7231, Section 6.5.3]","302 Found [RFC7231, Section 6.4.3]","504 Gateway Timeout [RFC7231, Section 6.6.5]","410 Gone [RFC7231, Section 6.5.9]","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]","418 I’m a teapot [curiously not registered by IANA but …","226 IM Used [RFC3229]","507 Insufficient Storage [RFC4918]","500 Internal Server Error [RFC7231, Section 6.6.1]","An API Response returned an error","An Overwolf Response returned an error.","411 Length Required [RFC7231, Section 6.5.10]","423 Locked [RFC4918]","508 Loop Detected [RFC5842]","405 Method Not Allowed [RFC7231, Section 6.5.5]","421 Misdirected Request RFC7540, Section 9.1.2","301 Moved Permanently [RFC7231, Section 6.4.2]","300 Multiple Choices [RFC7231, Section 6.4.1]","207 Multi-Status [RFC4918]","511 Network Authentication Required [RFC6585]","203 Non-Authoritative Information [RFC7231, Section 6.3.4]","406 Not Acceptable [RFC7231, Section 6.5.6]","510 Not Extended [RFC2774]","404 Not Found [RFC7231, Section 6.5.4]","501 Not Implemented [RFC7231, Section 6.6.2]","304 Not Modified [RFC7232, Section 4.1]","204 No Content [RFC7231, Section 6.3.5]","200 OK [RFC7231, Section 6.3.1]","206 Partial Content [RFC7233, Section 4.1]","413 Payload Too Large [RFC7231, Section 6.5.11]","402 Payment Required [RFC7231, Section 6.5.2]","308 Permanent Redirect [RFC7238]","412 Precondition Failed [RFC7232, Section 4.2]","428 Precondition Required [RFC6585]","102 Processing [RFC2518]","407 Proxy Authentication Required [RFC7235, Section 3.2]","Result type","416 Range Not Satisfiable [RFC7233, Section 4.4]","431 Request Header Fields Too Large [RFC6585]","408 Request Timeout [RFC7231, Section 6.5.7]","205 Reset Content [RFC7231, Section 6.3.6]","Reqwest HTTP error","303 See Other [RFC7231, Section 6.4.4]","503 Service Unavailable [RFC7231, Section 6.6.4]","101 Switching Protocols [RFC7231, Section 6.2.2]","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","307 Temporary Redirect [RFC7231, Section 6.4.7]","429 Too Many Requests [RFC6585]","401 Unauthorized [RFC7235, Section 3.1]","451 Unavailable For Legal Reasons [RFC7725]","422 Unprocessable Entity [RFC4918]","415 Unsupported Media Type [RFC7231, Section 6.5.13]","426 Upgrade Required [RFC7231, Section 6.5.15]","414 URI Too Long [RFC7231, Section 6.5.12]","305 Use Proxy [RFC7231, Section 6.4.5]","Url Parse Error","506 Variant Also Negotiates [RFC2295]","Returns a &str representation of the <code>StatusCode</code>","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.","","","","","","","Get the standardised <code>reason-phrase</code> for this status code.","","","","","","","","","","","","","","","","","","","","","","","","Converts a &u8 to a status code","","Converts a u16 to a status code.","","Get player info using the Overwolf API.","Get an r6tracker profile","Get the sessions for a user","","","","","Check if status is within 400-499.","Check if status is within 100-199.","Check if status is within 300-399.","Check if status is within 500-599.","Check if status is within 200-299.","","Make a new client","","","","","","","","","","","","","","","","","","","","Overwolf API Types","","","Stat Data Type","User Data Type","","An Invalid Response","The error that occurs when an OverwolfResponse is in an …","An Overwolf Operator","An Overwolf Player","Overwolf Rank Info","A Json Overwolf Response","Seasonal stats. This may also represent hidden casual …","Seasonal Operator data","A Valid response","Avatar URL","","","","","","","","","","","","","","","Current Rank Info","The current season","Current season best region stats","","","","","","","","","","","","","","","","","","","","","","Get the current casual season stats for this user","Get the lifetime K/D for ranked","Get lifetime ranked win %","Get the season with the max mmr","Get the valid member as an Option.","Season image URL","Operator Image","","","","","","","","Turn this into a Result.","Whether this operator is attack","Probably r6tracker premium","Whether this season represents a ranked season","Whether this operator is this user’s top operator","Iterate over ranked seasons where the user placed","Iterate over ranked seasons","The K/D this season","The K/D with this op","The # of kills this season","The total # of kills with this op","Player Level","Overwolf Lifetime Stats","Lifetime Stats","The # of matches this season","The max mmr for this season","Max Rank Info","MMR","MMR","Maybe the change in mmr this season?","Player name","Operator name","Next Rank Info","Operator Stats","Operator Stats","Player ID","Previous Rank Info","The icon url for this rank","The rank name","The name of this rank","Unknown","Season Region","The label of the region","Season #","Seasonal Operator Stats","All seasonal stats","","","","","","Started tracking datetimestamp","Whether this person is a suspected cheater","Take the valid member, consuming this struct. Same …","The time played (in seconds?)","The time played as a user-displayable string","","","","","","","","","","","","","","","","","","","","","","","Unknown keys","Unknown keys","Unknown keys","Unknown keys","Unknown keys","Win Percent","Win %","The # of wins this season","The total # of wins with this op","Best Overwolf Lifetime MMR","Player Lifetime Stats","Best MMR Stats","Total # of blind kills","","","","","Total # of deaths","","","","","","","Total headshot %","Total # of headshots","Rank Image URL","","","Total K/D","Total # of kills","Total # of losses","Total # of matches","Total # of melee kills","MMR","Rank Name","","","","","","","","","Unknown keys","Unknown Keys","Win Percent","Total # of wins","Total # of XP","","Error when a u32 cannot be converted into a platform.","","The representation of a platform","","","Converts a platform into its code","","","","","","","","","","","","","","","Tries to convert a u32 into a Platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that occured while procesing an API Request","A json response from the UserData API.","","","","","","","","","","","","","","","","An Invalid Response","","","","","","An R6 Rank.","","","","","","","","A Valid Response","","Get user avatar url","","","","","","","","","","","","","Collection of ranked seasons stats","","","","Gets top mmr from all servers.","Get the MMR for this user.","Get the image url for the rank this user is at gloablly","","","","","","","","","","","","","","","","","","","","","","","Get total # of deaths","Get total # of kills","Get the latest stats for the latest ranked region/season …","Get the season where the user attained their max ranking","Unique user id","","","","","","","Convert this into as Result.","Get overall K/D","","","","The error message","Metadata","Get a string rep of this rank","Get user tag name","","","","Season data type","Gets this season’s color as a string hex value","Tries to parse this season’s hex color as a u32","","","","A collection of all stats","","Consume self and return the invalid variant, or None.","Consume self and return the valid variant, or None.","","","","","","","","","","","","","","","","","","","","","","Unknown fields","","Get Overall W/L","","A representation of a ranked season/region","","","","","Gets current mmr for this region in this season","","","","","","","","","","","Get the max mmr","Get the max rank","","","","","","","","","","","","","","","","Get Win / Loss this season/region"],"i":[1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,2,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,1,3,2,1,3,2,1,1,3,1,3,1,1,3,1,1,1,1,3,2,2,1,1,3,2,2,2,2,2,1,1,1,1,1,1,3,3,3,1,3,2,1,1,1,1,1,1,1,3,1,2,3,1,2,1,3,2,1,1,1,1,3,2,1,3,2,1,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,5,6,4,5,6,7,8,9,10,4,5,6,7,8,9,10,7,6,6,5,6,7,8,9,10,4,4,5,6,7,8,9,10,4,5,6,7,8,9,10,6,6,6,6,5,7,9,4,5,6,7,8,9,10,5,9,6,7,9,6,6,7,9,7,9,6,0,6,7,7,7,7,8,7,6,9,7,6,10,6,7,8,7,8,8,7,7,7,6,6,6,7,8,9,10,10,6,5,9,9,4,4,5,6,7,8,9,10,4,5,6,7,8,9,10,4,5,6,7,8,9,10,6,7,8,9,10,7,9,7,9,0,0,11,11,11,12,11,12,11,11,12,11,12,11,12,11,11,12,11,12,11,11,11,11,11,12,12,11,12,11,12,11,12,11,12,11,12,11,11,11,13,0,14,0,14,14,14,13,14,13,14,14,14,14,14,14,13,13,14,13,14,14,13,14,14,14,13,13,14,14,13,14,13,14,0,0,0,15,16,17,15,16,17,15,16,17,16,16,15,16,17,15,16,17,17,15,16,17,16,15,17,16,17,15,16,17,16,16,17,15,16,17,15,16,17,15,16,17,15,16,17,0,0,18,19,18,19,19,19,19,18,19,18,18,19,18,19,18,19,18,19,19,19,18,18,19,18,18,18,19,18,19,18,19,18,19,18,19,18,20,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,0,0,21,21,21,0,21,21,21,21,21,21,0,22,23,24,22,20,25,21,24,23,22,20,25,21,24,23,24,21,21,23,24,24,24,23,23,22,25,24,23,21,21,22,20,20,25,25,21,24,23,22,20,25,21,24,23,24,24,24,24,24,22,20,25,21,24,23,22,24,24,23,23,25,24,21,24,23,23,23,0,24,24,23,24,23,24,23,22,22,21,20,25,22,20,25,21,24,23,22,20,25,21,24,23,22,20,25,21,24,23,24,23,24,0,0,26,27,26,27,26,26,27,26,27,26,27,26,26,27,26,26,26,26,27,27,26,27,26,27,26,27,26,27,26,27,26,27,26],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["str",15],["option",4,["str"]]]],[[],["client",3]],[[],["statuscode",3]],[[]],[[]],[[["statuscode",3]],["ordering",4]],[[]],[[],["statuscode",3]],[[["u16",15]],["bool",15]],[[["statuscode",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[["invalidapiresponseerror",3]]],[[["parseerror",4]]],[[["error",3]]],[[["invalidoverwolfresponseerror",3]]],[[["statuscode",3]],["statuscode",3]],[[]],[[],[["result",4,["statuscode","invalidstatuscode"]],["invalidstatuscode",3],["statuscode",3]]],[[["str",15]],[["result",4,["statuscode","invalidstatuscode"]],["invalidstatuscode",3],["statuscode",3]]],[[["u16",15]],[["result",4,["statuscode","invalidstatuscode"]],["invalidstatuscode",3],["statuscode",3]]],[[],["u64",15]],[[["str",15]]],[[["str",15],["platform",4]]],[[["str",15],["platform",4]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["statuscode",3]],["bool",15]],[[]],[[["statuscode",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["u16",15]],[["result",4,["statuscode"]],["statuscode",3]]],[[],["result",4]],[[],[["result",4,["statuscode"]],["statuscode",3]]],[[["str",15]],[["result",4,["statuscode"]],["statuscode",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["overwolfseason"]],["overwolfseason",3]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["option",4,["overwolfseason"]],["overwolfseason",3]]],[[],["option",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["invalidoverwolfresponseerror"]],["invalidoverwolfresponseerror",3]]],null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["option",4]],null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,null,[[]],[[]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["platform",4]],[[]],[[],["result",4]],[[["platform",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],[["result",4,["invalidplatformcode"]],["invalidplatformcode",3]]],[[]],[[]],[[],["result",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["u32",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["option",4,["url"]],["url",3]]],null,[[]],[[]],null,null,null,[[],["str",15]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["url",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["rank",4]],[[]],null,[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["url"]],["url",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["rank",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["u64",15],["option",4,["u64"]]]],[[],[["u64",15],["option",4,["u64"]]]],[[],[["season",3],["option",4,["season"]]]],[[],[["season",3],["option",4,["season"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["invalidapiresponseerror",3],["result",4,["invalidapiresponseerror"]]]],[[],[["option",4,["f64"]],["f64",15]]],null,null,null,null,null,[[],["str",15]],[[],["str",15]],null,null,null,null,[[],["str",15]],[[],[["option",4,["u32"]],["u32",15]]],null,[[],["result",4]],[[],["result",4]],null,null,[[],[["invalidapiresponseerror",3],["option",4,["invalidapiresponseerror"]]]],[[],["option",4]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],[["option",4,["f64"]],["f64",15]]],null,null,[[]],[[]],[[]],[[]],[[],[["option",4,["u32"]],["u32",15]]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,[[],[["u64",15],["option",4,["u64"]]]],[[],[["rank",4],["option",4,["rank"]]]],null,null,null,[[],["result",4]],[[],["result",4]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],[["option",4,["f64"]],["f64",15]]]],"p":[[3,"StatusCode"],[4,"Error"],[3,"Client"],[3,"InvalidOverwolfResponseError"],[4,"OverwolfResponse"],[3,"OverwolfPlayer"],[3,"OverwolfSeason"],[3,"OverwolfRank"],[3,"OverwolfOperator"],[3,"SeasonalOperators"],[3,"LifetimeStats"],[3,"BestMmr"],[3,"InvalidPlatformCode"],[4,"Platform"],[3,"SessionsData"],[3,"Session"],[3,"Match"],[3,"Stat"],[3,"Metadata"],[3,"InvalidApiResponseError"],[4,"Rank"],[4,"ApiResponse"],[3,"Metadata"],[3,"UserData"],[3,"ApiError"],[3,"Season"],[3,"Metadata"]]},\
"reddit_tube":{"doc":"","t":[18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,18,18,18,3,18,18,13,4,6,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,13,4,3,3,13,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,4,3,13,13,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ACCEPTED","ALREADY_REPORTED","BAD_GATEWAY","BAD_REQUEST","CONFLICT","CONTINUE","CREATED","Client","EXPECTATION_FAILED","FAILED_DEPENDENCY","FORBIDDEN","FOUND","GATEWAY_TIMEOUT","GONE","HTTP_VERSION_NOT_SUPPORTED","IM_A_TEAPOT","IM_USED","INSUFFICIENT_STORAGE","INTERNAL_SERVER_ERROR","InvalidMainPage","LENGTH_REQUIRED","LOCKED","LOOP_DETECTED","METHOD_NOT_ALLOWED","MISDIRECTED_REQUEST","MOVED_PERMANENTLY","MULTIPLE_CHOICES","MULTI_STATUS","NETWORK_AUTHENTICATION_REQUIRED","NON_AUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_EXTENDED","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","NO_CONTENT","OK","PARTIAL_CONTENT","PAYLOAD_TOO_LARGE","PAYMENT_REQUIRED","PERMANENT_REDIRECT","PRECONDITION_FAILED","PRECONDITION_REQUIRED","PROCESSING","PROXY_AUTHENTICATION_REQUIRED","RANGE_NOT_SATISFIABLE","REQUEST_HEADER_FIELDS_TOO_LARGE","REQUEST_TIMEOUT","RESET_CONTENT","Reqwest","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","StatusCode","TEMPORARY_REDIRECT","TOO_MANY_REQUESTS","TokioJoin","TubeError","TubeResult","UNAUTHORIZED","UNAVAILABLE_FOR_LEGAL_REASONS","UNPROCESSABLE_ENTITY","UNSUPPORTED_MEDIA_TYPE","UPGRADE_REQUIRED","URI_TOO_LONG","USE_PROXY","VARIANT_ALSO_NEGOTIATES","as_str","as_u16","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canonical_reason","clone","clone","clone_into","clone_into","cmp","default","default","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_str","from_u16","get_hash","get_main_page","get_video","hash","into","into","into","is_client_error","is_informational","is_redirection","is_server_error","is_success","ne","new","partial_cmp","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","get_video_response","main_page","Error","GetVideoResponse","GetVideoResponseError","GetVideoResponseOk","Ok","VideoData","affected","already_downloaded","author","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize","duration","errores","extra","extra","extra","file_hash","fmt","fmt","fmt","fmt","fmt","from","from","from","from","has_audio","into","into","into","into","is_gif","is_video","kind","meme","meme","meme_msg","msg","nsfw","points","provider_name","share_url","short_id","subreddit","thumbnail","thumbnail_name","title","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","url","url","user_email","user_hash","video_data","video_size","FromHtmlError","MainPage","MissingCsrf","MissingDownloadForm","borrow","borrow","borrow_mut","borrow_mut","csrf_key","csrf_value","fmt","fmt","fmt","from","from","into","into","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["reddit_tube","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","reddit_tube::types","","reddit_tube::types::get_video_response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","reddit_tube::types::main_page","","","","","","","","","","","","","","","","","","","","","","",""],"d":["202 Accepted [RFC7231, Section 6.3.3]","208 Already Reported [RFC5842]","502 Bad Gateway [RFC7231, Section 6.6.3]","400 Bad Request [RFC7231, Section 6.5.1]","409 Conflict [RFC7231, Section 6.5.8]","100 Continue [RFC7231, Section 6.2.1]","201 Created [RFC7231, Section 6.3.2]","Client","417 Expectation Failed [RFC7231, Section 6.5.14]","424 Failed Dependency [RFC4918]","403 Forbidden [RFC7231, Section 6.5.3]","302 Found [RFC7231, Section 6.4.3]","504 Gateway Timeout [RFC7231, Section 6.6.5]","410 Gone [RFC7231, Section 6.5.9]","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]","418 I’m a teapot [curiously not registered by IANA but …","226 IM Used [RFC3229]","507 Insufficient Storage [RFC4918]","500 Internal Server Error [RFC7231, Section 6.6.1]","invalid main page","411 Length Required [RFC7231, Section 6.5.10]","423 Locked [RFC4918]","508 Loop Detected [RFC5842]","405 Method Not Allowed [RFC7231, Section 6.5.5]","421 Misdirected Request RFC7540, Section 9.1.2","301 Moved Permanently [RFC7231, Section 6.4.2]","300 Multiple Choices [RFC7231, Section 6.4.1]","207 Multi-Status [RFC4918]","511 Network Authentication Required [RFC6585]","203 Non-Authoritative Information [RFC7231, Section 6.3.4]","406 Not Acceptable [RFC7231, Section 6.5.6]","510 Not Extended [RFC2774]","404 Not Found [RFC7231, Section 6.5.4]","501 Not Implemented [RFC7231, Section 6.6.2]","304 Not Modified [RFC7232, Section 4.1]","204 No Content [RFC7231, Section 6.3.5]","200 OK [RFC7231, Section 6.3.1]","206 Partial Content [RFC7233, Section 4.1]","413 Payload Too Large [RFC7231, Section 6.5.11]","402 Payment Required [RFC7231, Section 6.5.2]","308 Permanent Redirect [RFC7238]","412 Precondition Failed [RFC7232, Section 4.2]","428 Precondition Required [RFC6585]","102 Processing [RFC2518]","407 Proxy Authentication Required [RFC7235, Section 3.2]","416 Range Not Satisfiable [RFC7233, Section 4.4]","431 Request Header Fields Too Large [RFC6585]","408 Request Timeout [RFC7231, Section 6.5.7]","205 Reset Content [RFC7231, Section 6.3.6]","HTTP Reqwest Error","303 See Other [RFC7231, Section 6.4.4]","503 Service Unavailable [RFC7231, Section 6.6.4]","101 Switching Protocols [RFC7231, Section 6.2.2]","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).","307 Temporary Redirect [RFC7231, Section 6.4.7]","429 Too Many Requests [RFC6585]","a tokio task failed","Client Error","Result Type","401 Unauthorized [RFC7235, Section 3.1]","451 Unavailable For Legal Reasons [RFC7725]","422 Unprocessable Entity [RFC4918]","415 Unsupported Media Type [RFC7231, Section 6.5.13]","426 Upgrade Required [RFC7231, Section 6.5.15]","414 URI Too Long [RFC7231, Section 6.5.12]","305 Use Proxy [RFC7231, Section 6.4.5]","506 Variant Also Negotiates [RFC2295]","Returns a &str representation of the <code>StatusCode</code>","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.","","","","","","","Get the standardised <code>reason-phrase</code> for this status code.","","","","","","","","","","","","","","","","","","","","","","","Converts a &u8 to a status code","","Converts a u16 to a status code.","","Gets <code>MainPage</code> data.","Get a video for a reddit url.","","","","","Check if status is within 400-499.","Check if status is within 100-199.","Check if status is within 300-399.","Check if status is within 500-599.","Check if status is within 200-299.","","Makes a new <code>Client</code>.","","","","","","","","","","","","","","","","","","","","","","","The response for getting a video","Error video response","A good video response","","Video Data","","","Author","","","","","","","","","","","","","Video duration","Errors","","Unknown data","Unknown data","","","","","","","","","","","Whether the post has audio","","","","","Whether the post is a gif","Whether the post is a video","The post type?","","Meme","","Error message","Whether the post is nsfw","","?","","","The subreddit","The thumbnail url","","The post title","","","","","","","","","","","","","","","The post url?","","","","","Error that may occur while parsing a <code>MainPage</code> from <code>Html</code>.","The main page","Missing csrf data","missing download form","","","","","The csrf key","The csrf value","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,0,1,1,2,0,0,1,1,1,1,1,1,1,1,1,1,3,2,1,3,2,1,1,3,1,3,1,1,3,1,1,1,1,3,2,2,1,1,3,2,2,2,2,1,1,1,1,1,1,3,3,1,3,2,1,1,1,1,1,1,1,3,1,2,3,1,2,1,3,2,1,1,1,1,3,2,1,3,2,1,0,0,0,4,0,0,0,4,0,5,5,6,4,5,6,7,4,5,6,7,4,5,6,7,6,7,5,6,7,5,4,5,6,7,7,4,5,6,7,6,4,5,6,7,6,6,6,5,7,5,7,6,5,6,5,5,6,6,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,5,6,5,5,5,5,0,0,8,8,8,9,8,9,9,9,8,8,9,8,9,8,9,8,8,9,8,9,8,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["str",15],["option",4,["str"]]]],[[],["client",3]],[[],["statuscode",3]],[[]],[[]],[[["statuscode",3]],["ordering",4]],[[],["client",3]],[[],["statuscode",3]],[[["statuscode",3]],["bool",15]],[[["u16",15]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[["error",3]]],[[["fromhtmlerror",4]]],[[["joinerror",3]]],[[["statuscode",3]],["statuscode",3]],[[]],[[],[["result",4,["statuscode","invalidstatuscode"]],["invalidstatuscode",3],["statuscode",3]]],[[["str",15]],[["result",4,["statuscode","invalidstatuscode"]],["invalidstatuscode",3],["statuscode",3]]],[[["u16",15]],[["result",4,["statuscode","invalidstatuscode"]],["invalidstatuscode",3],["statuscode",3]]],[[],["u64",15]],[[]],[[["mainpage",3],["str",15]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["statuscode",3]],["bool",15]],[[]],[[["statuscode",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["u16",15]],[["result",4,["statuscode"]],["statuscode",3]]],[[],["result",4]],[[["str",15]],[["result",4,["statuscode"]],["statuscode",3]]],[[],[["result",4,["statuscode"]],["statuscode",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"StatusCode"],[4,"TubeError"],[3,"Client"],[4,"GetVideoResponse"],[3,"GetVideoResponseOk"],[3,"VideoData"],[3,"GetVideoResponseError"],[4,"FromHtmlError"],[3,"MainPage"]]},\
"rule34":{"doc":"","t":[12,3,3,4,3,13,13,13,13,13,13,17,3,3,13,3,17,3,3,3,13,3,13,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["0","Client","DeletedImagesList","Error","Html","InvalidId","InvalidJson","InvalidPost","InvalidUrl","Io","LimitTooLarge","POST_LIST_LIMIT_MAX","Post","PostListResult","Reqwest","SearchQueryBuilder","TAGS_LIST_LIMIT_MAX","Tag","TagKind","TagsList","TokioJoin","Url","XmlDeserialize","add_attrs_if_missing","add_tag","add_tag_iter","ambiguous","append","append_based_on_parent_node","append_before_sibling","append_doctype_to_document","artist_tags","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cannot_be_a_base","change","character_tags","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","copyright_tags","count","create_comment","create_element","create_pi","date","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_internal","directory","domain","elem_name","eq","eq","eq","equivalent","equivalent","equivalent","errors","extra","file_url","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_directory_path","from_file_path","from_html","from_str","general_tags","get_deleted_images","get_document","get_hash","get_hash","get_html","get_image_name","get_post","get_post_url","get_post_url","get_template_contents","get_text","get_to_writer","has_authority","has_child_posts","has_host","hash","hash","hash","height","host","host_str","id","id","id","image","image_url","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into_query_string","into_string","into_url","is_author","is_character","is_copyright","is_general","is_unknown","join","kind","kind","list_posts","list_tags","make_relative","mark_script_already_started","meta_tags","name","ne","ne","new","new","new_document","new_fragment","options","origin","owner","parent_id","parent_post","parse","parse_document","parse_error","parse_fragment","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","port","port_or_known_default","posts","preview_url","query","query_pairs","query_pairs_mut","quirks_mode","rating","remove_from_parent","reparent_children","root_element","same_node","sample","sample_height","sample_url","sample_width","scheme","score","select","serialize","serialize","serialize","serialize","serialize","serialize_internal","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_quirks_mode","set_scheme","set_username","socket_addrs","source","source","tags","tags","take_query_string","thumb_url","to_file_path","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","username","width"],"q":["ruled":["","A Rule34 Client","A list of deleted images","Crate Error Type","An HTML tree.","The post id was 0","Invalid json","Invalid Post","Invalid URL Error","IO Error","The limit was too large","","A Post page","A result for a list api call","Reqwest HTTP Error","A helper to build a search query.","","A Tag","The tag kind","A list of tags","A tokio task failed to complete","A parsed URL record.","XML deserialization error","","Add a tag.","Call <code>SearchQueryBuilder::add_tag</code> on each element of the …","?","","","","","Artist tags","","Return the serialization of this URL.","","","","","","","","","","","","","","","","","","","","","","","Return whether this URL is a cannot-be-a-base URL, …","?","Character tags","The inner http client.","","","","","","","","","","","","Copyright tags","The # of posts with this tag?","","","","The post date","","","","","","","","","Serialize with Serde using the internal representation of …","?","If this URL has a host and it is a domain name (not an IP …","","","","","","","","Parse errors.","Unknown extra values","the image url","","","","","","","","","","","","","","","Return this URL’s fragment identifier, if any.","","","","","","","","","","","","","","","","","","Convert a directory name as <code>std::path::Path</code> into an URL …","Convert a file name as <code>std::path::Path</code> into an URL in the …","Try to make a <code>Post</code> from <code>Html</code>.","","General tags","Get a list of deleted images.","","","","Send a GET web request to a <code>uri</code> and get the result as <code>Html</code>…","Try to get the image name.","Get a <code>Post</code> by <code>id</code>.","Get the post url for this post.","Get the post url for this list result.","","Send a GET web request to a <code>url</code> and get the result as a …","Send a GET web request to a <code>uri</code> and copy the result to …","Return whether the URL has an ‘authority’, which can …","Whether this post has child posts","Equivalent to <code>url.host().is_some()</code>.","","","the image hash","the image height","Return the parsed representation of the host for this URL.…","Return the string representation of the host (domain or …","The post id","the post id","The tag id","the image name","Image URL","","","","","","","","","","","","","","","","Convert into a usable query string.","Return the serialization of this URL.","","Returns true if this tag kind is an author","Returns true if this tag kind is a character","Retruns true if this tag is a copyright","Returns true if this tag kind is general","Returns true if the tag kind is unknown","Parse a string as an URL, with this URL as the base URL.","The tag list kind?","The tag kind","Create a builder to list posts from rule34.","Get a builder to list tags.","Creates a relative URL if possible, with this URL as the …","","Meta tags","The tag name","","","Make a new <code>Client</code>","Make a new <code>SearchQueryBuilder</code>.","Creates an empty HTML document.","Creates an empty HTML fragment.","Return a default <code>ParseOptions</code> that can fully configure …","Return the origin of this URL (…","owner","the parent post id","Whether this post has a parent post","Parse an absolute URL from a string.","Parses a string of HTML as a document.","","Parses a string of HTML as a fragment.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator …","Return an object with methods to manipulate this URL’s …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","A list of deleted posts","Preview image url","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a …","The quirks mode.","the image rating","","","Returns the root <code><html></code> element.","","?","?","?","?","Return the scheme of this URL, lower-cased, as an ASCII …","?","Returns an iterator over elements matching a selector.","","","","","","Serialize with Serde using the internal representation of …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","","The post source","Post tags","The list of tags","Take the built query string out.","Thumbnail Url","Assuming the URL is in the <code>file</code> scheme or similar, …","","","","","","","","The node tree.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the username for this URL (typically the empty …","image width"],"i":[1,0,0,0,0,2,2,2,2,2,2,0,0,0,2,0,0,0,0,0,2,0,2,3,4,4,5,3,3,3,3,6,7,7,8,2,4,9,6,10,11,5,1,7,3,8,2,4,9,6,10,11,5,1,7,3,7,10,6,8,8,10,1,7,3,8,10,1,7,3,7,6,5,3,3,3,6,8,4,9,10,11,5,1,7,7,10,7,3,1,7,3,1,7,3,3,10,10,3,8,2,2,4,9,6,10,11,5,1,7,7,3,7,8,2,2,2,2,2,2,2,4,9,6,10,11,5,1,7,3,7,7,6,7,6,8,3,1,7,8,6,8,6,10,3,8,8,7,6,7,1,7,10,10,7,7,6,10,5,10,6,7,7,7,7,8,2,4,9,6,10,11,5,1,7,3,4,7,7,1,1,1,1,1,7,11,5,8,8,7,3,6,5,1,3,8,4,3,3,7,7,10,10,6,7,3,3,3,7,7,7,7,7,7,7,7,9,10,7,7,7,3,10,3,3,3,3,10,10,10,10,7,10,3,10,11,5,1,7,7,7,7,7,7,7,7,7,3,7,7,7,2,6,10,11,4,6,7,8,10,1,7,3,2,7,3,8,2,4,9,6,10,11,5,1,7,7,3,8,2,4,9,6,10,11,5,1,7,3,8,2,4,9,6,10,11,5,1,7,3,7,10],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["attribute",3],["vec",3,["attribute","global"]],["global",3]]],[[["str",15]]],[[]],null,[[["nodeortext",4]]],[[["nodeortext",4]]],[[["nodeortext",4]]],[[["utf8",3],["nonatomic",3],["tendril",3,["utf8","nonatomic"]]]],null,[[],["str",15]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,null,[[],["client",3]],[[],["postlistresult",3]],[[],["tagkind",3]],[[],["url",3]],[[],["html",3]],[[]],[[]],[[]],[[]],[[]],[[["url",3]],["ordering",4]],null,null,[[["utf8",3],["nonatomic",3],["tendril",3,["utf8","nonatomic"]]]],[[["attribute",3],["vec",3,["attribute","global"]],["qualname",3],["global",3],["elementflags",3]]],[[["utf8",3],["nonatomic",3],["tendril",3,["utf8","nonatomic"]]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["url",3],["result",4,["url"]]]],[[],[["url",3],["result",4,["url"]]]],null,[[],[["option",4,["str"]],["str",15]]],[[],["expandedname",3]],[[["tagkind",3]],["bool",15]],[[["url",3]],["bool",15]],[[["html",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[],["html",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[],[["option",4,["str"]],["str",15]]],[[]],[[["error",3]]],[[["parseerror",4]]],[[["error",3]]],[[["deerror",4]]],[[["error",3]]],[[["joinerror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["url",3],["result",4,["url"]]]],[[],[["url",3],["result",4,["url"]]]],[[["html",3]],[["fromhtmlerror",4],["result",4,["fromhtmlerror"]]]],[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],null,[[["u64",15],["option",4,["u64"]]]],[[]],[[],["u64",15]],[[],["u64",15]],[[["str",15]]],[[],[["str",15],["option",4,["str"]]]],[[["u64",15]]],[[],["url",3]],[[],["url",3]],[[]],[[["str",15]]],[[["str",15]]],[[],["bool",15]],null,[[],["bool",15]],[[]],[[]],null,null,[[],[["option",4,["host"]],["host",4,["str"]]]],[[],[["option",4,["str"]],["str",15]]],null,null,null,null,null,[[["rangefull",3]],["str",15]],[[["rangeto",3,["position"]],["position",4]],["str",15]],[[["position",4],["rangefrom",3,["position"]]],["str",15]],[[["position",4],["range",3,["position"]]],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],[["url",3],["result",4,["url","error"]],["error",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],null,null,[[],["postlistquerybuilder",3]],[[],["tagslistquerybuilder",3]],[[["url",3]],[["option",4,["string"]],["string",3]]],[[]],null,null,[[["tagkind",3]],["bool",15]],[[["html",3]],["bool",15]],[[]],[[]],[[],["html",3]],[[],["html",3]],[[],["parseoptions",3]],[[],["origin",4]],null,null,null,[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],[[["str",15]],["html",3]],[[["cow",4,["str"]],["str",15]]],[[["str",15]],["html",3]],[[["str",15]],[["url",3],["result",4,["url","parseerror"]],["parseerror",4]]],[[["url",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["option",4,["str"]],["str",15]]],[[],["str",15]],[[],[["option",4,["split"]],["split",3,["char"]]]],[[],[["pathsegmentsmut",3],["result",4,["pathsegmentsmut"]]]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["u16",15],["option",4,["u16"]]]],null,null,[[],[["option",4,["str"]],["str",15]]],[[],["parse",3]],[[],[["serializer",3,["urlquery"]],["urlquery",3]]],null,null,[[]],[[]],[[],["elementref",3]],[[],["bool",15]],null,null,null,null,[[],["str",15]],null,[[["selector",3]],["select",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["option",4,["str"]],["str",15]]],[[["option",4,["str"]],["str",15]],[["result",4,["parseerror"]],["parseerror",4]]],[[["ipaddr",4]],["result",4]],[[["option",4,["str"]],["str",15]],["result",4]],[[["str",15]]],[[["u16",15],["option",4,["u16"]]],["result",4]],[[["option",4,["str"]],["str",15]]],[[["quirksmode",4]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["result",4,["vec","error"]],["vec",3,["socketaddr","global"]],["error",3]]],[[],[["option",4,["error"]],["error",8]]],null,null,null,[[],["string",3]],null,[[],[["pathbuf",3],["result",4,["pathbuf"]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["url",3],["result",4,["url"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],null],"p":[[3,"TagKind"],[4,"Error"],[3,"Html"],[3,"SearchQueryBuilder"],[3,"Tag"],[3,"Post"],[3,"Url"],[3,"Client"],[3,"DeletedImagesList"],[3,"PostListResult"],[3,"TagsList"]]},\
"sauce_nao":{"doc":"","t":[4,13,13,11,11,0,11,11,11,11,11,0,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,12,12,0,3,3,3,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,12,12,12,0,12,12,12,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,4,3,3,13,3,13,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,11,11,11,11,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12],"n":["Error","Reqwest","Url","borrow","borrow_mut","client","fmt","fmt","from","from","from","image","into","source","to_string","try_from","try_into","type_id","types","Client","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","search","to_owned","try_from","try_into","type_id","File","Image","Url","borrow","borrow_mut","from","from","from","from_file","from_path","into","try_from","try_into","type_id","body","name","search_json","Header","IndexEntry","SearchJson","account_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","extra","extra","extra","fmt","fmt","fmt","from","from","from","header","id","index","into","into","into","long_limit","long_remaining","minimum_similarity","parent_id","query_image","query_image_display","result_entry","results","results","results_requested","results_returned","search_depth","serialize","serialize","serialize","short_limit","short_remaining","status","status","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","Creator","Data","Header","Multiple","ResultEntry","Single","anidb_aid","artist","author","author_name","author_url","bcy_id","bcy_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","characters","created_at","creator","da_id","danbooru_id","data","deserialize","deserialize","deserialize","deserialize","drawr_id","dupes","eng_name","est_time","ext_urls","extra","extra","extra","fa_id","fmt","fmt","fmt","fmt","fn_id","fn_type","from","from","from","from","gelbooru_id","header","index_id","index_name","into","into","into","into","jp_name","konachan_id","material","md_id","member_id","member_link_id","member_name","part","pawoo_id","pawoo_user_acct","pawoo_user_display_name","pawoo_user_username","pixiv_id","sankaku_id","seiga_id","serialize","serialize","serialize","serialize","similarity","source","thumbnail","title","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tweet_id","twitter_user_handle","twitter_user_id","type_id","type_id","type_id","type_id","year"],"q":["sauce_nao","","","","","","","","","","","","","","","","","","","sauce_nao::client","","","","","","","","","","","","","","sauce_nao::image","","","","","","","","","","","","","","sauce_nao::image::Image","","sauce_nao::types","sauce_nao::types::search_json","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sauce_nao::types::search_json::result_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The error type","A reqwest error","A URL parse error","","","Client type","","","","","","Image type Copied from <code>iqdb</code> Try to keep this file in sync.","","","","","","","Api types","The sauce nao client","","","","","","","","Create a new <code>Client</code>.","Look up an image","","","","","An image file","An Image","A url to an image","","","","","","Make an <code>Image</code> from a file and a name.","Make an <code>Image</code> from a path, opening the file …","","","","","","","<code>SearchJson</code> types","Search json result header","An entry in the header index","A JSON search result","account type?","","","","","","","","","","Extra K/Vs","Extra K/Vs","Extra K/Vs","","","","","","","Header","id?","index?","","","","Long limit?","long remaining?","minimum similarity?","parent id?","the query image name","a path to the image maybe?","<code>ResultEntry</code> types","Results","results?","results requested?","the number of results returned","search depth?","","","","Short limit?","short remaining","status?","status?","","","","","","","","","","user id?","The creator field of <code>Data</code>","Result data","A result entry header","multiple creators","A result entry","a single creator","?","artist?","author?","Author name","Author URL","bcy_id?","bcy_type?","","","","","","","","","characters?","twitter tweet creation date","creator?","Deviantart ID","danbooru_id?","Data","","","","","drawr_id?","the # of dupes","eng name?","?","?","Extra K/Vs","Extra K/Vs","Extra K/Vs","fur affinity id","","","","","fn_id?","fn_type?","","","","","gelbooru_id?","Header","index id?","The index name","","","","","jp name?","konachan_id?","material?","md_id?","member id","member_link_id?","member name","?","pawoo_id?","pawoo_user_acct?","pawoo_user_display_name?","pawoo_user_username?","Pixiv id","sankaku_id?","seiga_id?","","","","","Result similarity","source","Image thumbnail","title","","","","","","","","","tweet_id","twitter_user_handle","twitter_user_id","","","","","anime year?"],"i":[0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,3,0,3,3,3,3,3,3,3,3,3,3,3,3,4,4,0,0,0,0,5,6,5,7,6,5,7,6,5,7,6,5,7,6,5,7,6,5,7,6,7,5,6,5,7,5,5,5,7,5,5,0,6,7,5,5,5,6,5,7,5,5,5,7,6,5,7,6,5,7,6,5,7,5,0,0,0,8,0,8,9,9,9,9,9,9,9,10,11,9,8,10,11,9,8,9,9,9,9,9,10,10,11,9,8,9,11,9,9,9,10,11,9,9,10,11,9,8,9,9,10,11,9,8,9,10,11,11,10,11,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,9,8,11,9,11,9,10,11,9,8,10,11,9,8,9,9,9,10,11,9,8,9],"f":[null,null,null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["parseerror",4]]],[[["error",3]]],null,[[]],[[],[["option",4,["error"]],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["client",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[["string",3]]],[[["str",15]]],[[["file",3],["string",3]],["result",6]],[[["path",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Error"],[3,"Client"],[4,"Image"],[13,"File"],[3,"Header"],[3,"SearchJson"],[3,"IndexEntry"],[4,"Creator"],[3,"Data"],[3,"ResultEntry"],[3,"Header"]]},\
"tic_tac_toe":{"doc":"","t":[17,0,5,0,13,3,3,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,13,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NUM_TILES","board","minimax","team","AntiDiagonal","Board","ChildrenIter","Diagonal","Horizontal","Vertical","WinType","WinnerInfo","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode_u16","default","encode_u16","end_tile_index","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","get","get_turn","get_winner","get_winner_info","has_won","hash","hash","hash","into","into","into","into","into_iter","is_draw","iter","iter_children","ne","ne","new","next","set","size_hint","start_tile_index","team","tile_indexes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","win_type","0","InvalidChar","InvalidCharError","InvalidLength","InvalidStrError","O","Team","X","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_char","from_str","hash","into","into","into","inverse","source","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["tic_tac_toe","","","","tic_tac_toe::board","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tic_tac_toe::team","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The # of tic-tac-toe tiles","","Run minimax on a board.","","","A Tic Tac Toe board","","","","","The win type","Winner Info","","","","","","","","","","","","","","","Decode a <code>u16</code> into a board","","Encode this board as a <code>u16</code>.","Get the highest tile index","","","","","","","","","","","","Get the tile at the index.","Get the team whos turn it is.","Get the winner if they exist","Get the winner info, if there is a winner","Check if the given team won.","","","","","","","","","Returns true if it is a draw.","Get an iterator over the tiles.","Get an iterator over child board states.","","","Make a new <code>Board</code>.","","Set the tile at the index.","","Get the least tile index","The winning team","The tile_indexes that are part of the win.","","","","","","","","","","","","","","","","The win type","","The char is not valid.","Failed to parse a <code>Team</code> from a <code>char</code>.","The string is the wrong length. It must contain exactly …","Failed to parse a <code>Team</code> from a <code>str</code>.","","A Tic Tac Toe Team","","","","","","","","","","","","","","","","","","","","","","","","Try to parse a [<code>TicTacToeTeam</code>] from a <code>char</code>.","","","","","","Invert the teams","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,0,0,1,1,1,0,0,1,2,3,4,1,2,3,4,1,2,3,1,2,3,3,3,3,2,1,2,3,1,2,3,4,1,2,3,4,3,3,3,3,3,1,2,3,1,2,3,4,4,3,3,3,2,3,3,4,3,4,2,2,2,1,2,3,1,2,3,4,1,2,3,4,1,2,3,4,2,5,6,0,6,0,7,0,7,5,6,7,5,6,7,5,6,7,5,6,7,7,5,5,6,6,7,5,6,6,7,7,7,7,5,6,7,7,6,5,6,7,5,6,5,6,7,5,6,7,5,6,7],"f":[null,null,[[["board",3],["u8",15]]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["wintype",4]],[[],["winnerinfo",3]],[[],["board",3]],[[]],[[]],[[]],[[["u16",15]]],[[]],[[],["u16",15]],[[],["u8",15]],[[["wintype",4]],["bool",15]],[[["winnerinfo",3]],["bool",15]],[[["board",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u8",15]],[["option",4,["team"]],["team",4]]],[[],["team",4]],[[],[["option",4,["team"]],["team",4]]],[[],[["winnerinfo",3],["option",4,["winnerinfo"]]]],[[["team",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[],["childreniter",3]],[[["winnerinfo",3]],["bool",15]],[[["board",3]],["bool",15]],[[]],[[],["option",4]],[[["u8",15],["option",4,["team"]],["team",4]]],[[]],[[],["u8",15]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["invalidcharerror",3]],[[],["invalidstrerror",4]],[[],["team",4]],[[]],[[]],[[]],[[["team",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["invalidcharerror",3]]],[[]],[[]],[[["char",15]],[["invalidcharerror",3],["result",4,["invalidcharerror"]]]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"WinType"],[3,"WinnerInfo"],[3,"Board"],[3,"ChildrenIter"],[3,"InvalidCharError"],[4,"InvalidStrError"],[4,"Team"]]},\
"tiktok":{"doc":"","t":[3,4,3,13,13,13,3,3,13,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Client","Error","Html","InvalidOpenGraphObject","InvalidStatus","Io","OpenGraphObject","PostUrl","Reqwest","TokioJoin","add_attrs_if_missing","append","append_based_on_parent_node","append_before_sibling","append_doctype_to_document","as_str","audio_url","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone_into","clone_into","clone_into","create_comment","create_element","create_pi","default","description","elem_name","eq","eq","equivalent","equivalent","errors","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_html","from_str","from_url","get_document","get_hash","get_image_file_name","get_post","get_template_contents","get_to","get_video_url_file_name","hash","image","into","into","into","into","into","is_image","is_video","kind","mark_script_already_started","ne","ne","new","new_document","new_fragment","parse_document","parse_error","parse_fragment","quirks_mode","remove_from_parent","reparent_children","root_element","same_node","select","set_quirks_mode","source","title","to_owned","to_owned","to_owned","to_string","tree","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","video_url"],"q":["tiktok","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A tiktok client","Error Type","An HTML tree.","Failed to parse an <code>OpenGraphObject</code>.","Invalid HTTP Status Code","Io Error","An OpenGraphObject.","A url for tiktok post page","Reqwest HTTP Error","A Tokio Task Panicked","","","","","","Get this as a <code>str</code>.","Audio Url","","","","","","","","","","","The inner HTTP client.","","","","","","","","","","","Object Description","","","","","","Parse errors.","","","","","","","","","","","","","","","","","Make a new <code>OpenGraphObject</code> from <code>Html</code>.","","Make a <code>PostUrl</code> from a <code>Url</code> or return the original url.","","","Try to get the video url’s file name","Get a tiktock post.","","Send a HTTP request to the url and copy the response to …","Try to get the video url’s file name","","Object Image Url","","","","","","Check whether this is an image","Check whether this is a video","Object Type/Kind","","","","Make a new <code>Client</code>","Creates an empty HTML document.","Creates an empty HTML fragment.","Parses a string of HTML as a document.","","Parses a string of HTML as a fragment.","The quirks mode.","","","Returns the root <code><html></code> element.","","Returns an iterator over elements matching a selector.","","","Object Title","","","","","The node tree.","","","","","","","","","","","","","","","","Object Permanent Url","Video Url"],"i":[0,0,0,1,1,1,0,0,1,1,2,2,2,2,2,3,4,3,1,5,4,2,3,1,5,4,2,5,5,4,2,5,4,2,2,2,2,5,4,2,4,2,4,2,2,2,3,1,1,5,4,2,3,1,1,1,1,1,5,4,2,4,4,3,2,4,4,5,2,5,4,4,4,3,1,5,4,2,4,4,4,2,4,2,5,2,2,2,2,2,2,2,2,2,2,2,2,1,4,5,4,2,1,2,3,1,5,4,2,3,1,5,4,2,3,1,5,4,2,4,4],"f":[null,null,null,null,null,null,null,null,null,null,[[["vec",3,["attribute","global"]],["attribute",3],["global",3]]],[[["nodeortext",4]]],[[["nodeortext",4]]],[[["nodeortext",4]]],[[["tendril",3,["utf8","nonatomic"]],["nonatomic",3],["utf8",3]]],[[],["str",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["client",3]],[[],["opengraphobject",3]],[[],["html",3]],[[]],[[]],[[]],[[["tendril",3,["utf8","nonatomic"]],["utf8",3],["nonatomic",3]]],[[["vec",3,["attribute","global"]],["attribute",3],["global",3],["elementflags",3],["qualname",3]]],[[["tendril",3,["utf8","nonatomic"]],["nonatomic",3],["utf8",3]]],[[]],null,[[],["expandedname",3]],[[["opengraphobject",3]],["bool",15]],[[["html",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["html",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[["error",3]]],[[["fromhtmlerror",4]]],[[["joinerror",3]]],[[["error",3]]],[[]],[[]],[[]],[[["html",3]],[["result",4,["opengraphobject","fromhtmlerror"]],["fromhtmlerror",4],["opengraphobject",3]]],[[["str",15]],[["result",4,["opengraphobject"]],["opengraphobject",3]]],[[["url",3]],[["url",3],["result",4,["url"]]]],[[]],[[],["u64",15]],[[],[["option",4,["str"]],["str",15]]],[[["posturl",3]]],[[]],[[["str",15]]],[[],[["option",4,["str"]],["str",15]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[]],[[["opengraphobject",3]],["bool",15]],[[["html",3]],["bool",15]],[[]],[[],["html",3]],[[],["html",3]],[[["str",15]],["html",3]],[[["cow",4,["str"]],["str",15]]],[[["str",15]],["html",3]],null,[[]],[[]],[[],["elementref",3]],[[],["bool",15]],[[["selector",3]],["select",3]],[[["quirksmode",4]]],[[],[["error",8],["option",4,["error"]]]],null,[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[4,"Error"],[3,"Html"],[3,"PostUrl"],[3,"OpenGraphObject"],[3,"Client"]]},\
"urban_dictionary":{"doc":"","t":[3,3,3,4,13,13,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Client","Definition","DefinitionList","Error","Reqwest","Url","author","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_vote","default","defid","definition","deserialize","deserialize","example","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_raw_definition","get_raw_example","into","into","into","into","list","lookup","new","permalink","serialize","serialize","sound_urls","source","thumbs_down","thumbs_up","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unknown","unknown","word","written_on"],"q":["urban_dictionary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Client","A <code>Definition</code> for a term.","A List of <code>Definition</code>.","Library Error Type","A reqwest http error","A url parse error","The author","","","","","","","","","","","The current votes for this","","The definition id","The actual definition","","","An example usage","","","","","","","","","","","","Get the raw definition.","Get the raw example.","","","","","The inner list","Lookup a term","Make a new <code>Client</code>.","The definition permalink","","","?","","of thumbs down","of thumbs up","","","","","","","","","","","","","","","Unknown k/vs","Unknown K/Vs","The term","Date written"],"i":[0,0,0,0,1,1,2,3,4,2,1,3,4,2,1,3,3,2,3,2,2,4,2,2,3,4,2,1,1,3,4,2,1,1,1,2,2,3,4,2,1,4,3,3,2,4,2,2,1,2,2,3,1,3,4,2,1,3,4,2,1,3,4,2,1,4,2,2,2],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["client",3]],[[]],null,[[]],null,null,[[],["result",4]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["error",3]]],[[]],[[["parseerror",4]]],[[],["string",3]],[[],["string",3]],[[]],[[]],[[]],[[]],null,[[["str",15]]],[[]],null,[[],["result",4]],[[],["result",4]],null,[[],[["option",4,["error"]],["error",8]]],null,null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null],"p":[[4,"Error"],[3,"Definition"],[3,"Client"],[3,"DefinitionList"]]},\
"xkcd":{"doc":"","t":[3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","Error","InvalidStatus","Reqwest","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","fmt","fmt","fmt","from","from","from","get_random","into","into","new","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["xkcd","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An XKCD client","Library Error type","Invalid HTTP StatusCode","Rewqwest HTTP Error","","","","","","","","","","","","","","Get a random xkcd comic url.","","","Make a new <code>Client</code>.","","","","","","","","",""],"i":[0,0,1,1,1,2,1,2,2,2,2,1,1,2,1,1,2,2,1,2,2,1,2,1,1,2,1,2,1,2],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],["client",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Error"],[3,"Client"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};